scheme SimpleRailTrainId_unfolded =
	class
		type
			TrainId == tt1 | tt2 | t1 | t2 | t3,
			SegmentId = {| n : Int :- (n >= 0) /\ (n < 2) |}
		value
			max : Int = 2
		transition_system [TS]
			variable
				position_t1 : SegmentId,
				position_t2 : SegmentId,
				position_t3 : SegmentId,
				position_tt1 : SegmentId,
				position_tt2 : SegmentId,
				occupied_0 : Bool,
				occupied_1 : Bool
			init_constraint
				position_tt1 = 0 /\
				position_tt2 = 1 /\
				occupied_0 = false /\
				occupied_1 = false /\
				occupied_0 = true /\
				occupied_1 = true
			transition_rules
				(((position_tt1 < (max - 1)) /\ ((position_tt1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt1' = (position_tt1 + 1)), (occupied_0' = false), (occupied_0' = true))
				 [=] 
				(((position_tt1 < (max - 1)) /\ ((position_tt1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt1' = (position_tt1 + 1)), (occupied_0' = false), (occupied_1' = true))
				 [=] 
				(((position_t3 < (max - 1)) /\ ((position_t3 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t3' = (position_t3 + 1)), (occupied_0' = false), (occupied_0' = true))
				 [=] 
				(((position_t3 < (max - 1)) /\ ((position_t3 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t3' = (position_t3 + 1)), (occupied_0' = false), (occupied_1' = true))
				 [=] 
				(((position_t2 < (max - 1)) /\ ((position_t2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t2' = (position_t2 + 1)), (occupied_0' = false), (occupied_0' = true))
				 [=] 
				(((position_t2 < (max - 1)) /\ ((position_t2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t2' = (position_t2 + 1)), (occupied_0' = false), (occupied_1' = true))
				 [=] 
				(((position_t1 < (max - 1)) /\ ((position_t1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t1' = (position_t1 + 1)), (occupied_0' = false), (occupied_0' = true))
				 [=] 
				(((position_t1 < (max - 1)) /\ ((position_t1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t1' = (position_t1 + 1)), (occupied_0' = false), (occupied_1' = true))
				 [=] 
				(((position_tt2 < (max - 1)) /\ ((position_tt2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt2' = (position_tt2 + 1)), (occupied_0' = false), (occupied_0' = true))
				 [=] 
				(((position_tt2 < (max - 1)) /\ ((position_tt2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt2' = (position_tt2 + 1)), (occupied_0' = false), (occupied_1' = true))
				 [=] 
				(((position_tt1 < (max - 1)) /\ ((position_tt1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt1' = (position_tt1 + 1)), (occupied_1' = false), (occupied_0' = true))
				 [=] 
				(((position_tt1 < (max - 1)) /\ ((position_tt1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt1' = (position_tt1 + 1)), (occupied_1' = false), (occupied_1' = true))
				 [=] 
				(((position_t3 < (max - 1)) /\ ((position_t3 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t3' = (position_t3 + 1)), (occupied_1' = false), (occupied_0' = true))
				 [=] 
				(((position_t3 < (max - 1)) /\ ((position_t3 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t3' = (position_t3 + 1)), (occupied_1' = false), (occupied_1' = true))
				 [=] 
				(((position_t2 < (max - 1)) /\ ((position_t2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t2' = (position_t2 + 1)), (occupied_1' = false), (occupied_0' = true))
				 [=] 
				(((position_t2 < (max - 1)) /\ ((position_t2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t2' = (position_t2 + 1)), (occupied_1' = false), (occupied_1' = true))
				 [=] 
				(((position_t1 < (max - 1)) /\ ((position_t1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t1' = (position_t1 + 1)), (occupied_1' = false), (occupied_0' = true))
				 [=] 
				(((position_t1 < (max - 1)) /\ ((position_t1 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_t1' = (position_t1 + 1)), (occupied_1' = false), (occupied_1' = true))
				 [=] 
				(((position_tt2 < (max - 1)) /\ ((position_tt2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt2' = (position_tt2 + 1)), (occupied_1' = false), (occupied_0' = true))
				 [=] 
				(((position_tt2 < (max - 1)) /\ ((position_tt2 = s1) /\ (((s1 + 1) = s2) /\ ~(occupied[s2])))) ==> (position_tt2' = (position_tt2 + 1)), (occupied_1' = false), (occupied_1' = true))
		end

	end
