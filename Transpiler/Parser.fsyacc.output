------------------------
states = 
state 0:  items:    _startstart ->  . start
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   shift 3
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto start: 1
    goto scheme: 2
state 1:  items:    _startstart -> start . 
  actions:    action 'EOF' (noprec):   accept
    action 'DOT' (noprec):   accept
    action 'COMMA' (noprec):   accept
    action 'COLON' (noprec):   accept
    action 'BAR' (noprec):   accept
    action 'LBRACKET' (noprec):   accept
    action 'RBRACKET' (noprec):   accept
    action 'QUOTE' (noprec):   accept
    action 'LPAREN' (noprec):   accept
    action 'RPAREN' (noprec):   accept
    action 'SLASH' (noprec):   accept
    action 'BSLASH' (noprec):   accept
    action 'PRIME' (noprec):   accept
    action 'LCURLY' (noprec):   accept
    action 'RCURLY' (noprec):   accept
    action 'GLOBALLY' (noprec):   accept
    action 'SCHEME' (noprec):   accept
    action 'CLASS' (noprec):   accept
    action 'TYPE' (noprec):   accept
    action 'VALUE' (noprec):   accept
    action 'AXIOM' (noprec):   accept
    action 'END' (noprec):   accept
    action 'ALL' (noprec):   accept
    action 'EXISTS' (noprec):   accept
    action 'EXACTLY_ONE' (noprec):   accept
    action 'TS' (noprec):   accept
    action 'TR' (noprec):   accept
    action 'WHERE' (noprec):   accept
    action 'VARIABLE' (noprec):   accept
    action 'INIT_CONSTRAINT' (noprec):   accept
    action 'ARRAY' (noprec):   accept
    action 'OF' (noprec):   accept
    action 'LTL_ASSERTION' (noprec):   accept
    action 'DETERMINISTIC' (noprec):   accept
    action 'NONDETERMINISTIC' (noprec):   accept
    action 'IS' (noprec):   accept
    action 'EQ' (noprec):   accept
    action 'LT' (noprec):   accept
    action 'LE' (noprec):   accept
    action 'GT' (noprec):   accept
    action 'GE' (noprec):   accept
    action 'MI' (noprec):   accept
    action 'PL' (noprec):   accept
    action 'GU' (noprec):   accept
    action 'IM' (noprec):   accept
    action 'LAND' (noprec):   accept
    action 'LOR' (noprec):   accept
    action 'NEG' (noprec):   accept
    action 'FALSE' (noprec):   accept
    action 'TRUE' (noprec):   accept
    action 'CHAR' (noprec):   accept
    action 'TEXT' (noprec):   accept
    action 'INT' (noprec):   accept
    action 'ID' (noprec):   accept
    action 'error' (noprec):   accept
    action '#' (noprec):   accept
    action '$$' (noprec):   accept
  immediate action:   accept  gotos:state 2:  items:    start -> scheme . 
  actions:    action 'EOF' (noprec):   reduce start --> scheme
    action 'DOT' (noprec):   reduce start --> scheme
    action 'COMMA' (noprec):   reduce start --> scheme
    action 'COLON' (noprec):   reduce start --> scheme
    action 'BAR' (noprec):   reduce start --> scheme
    action 'LBRACKET' (noprec):   reduce start --> scheme
    action 'RBRACKET' (noprec):   reduce start --> scheme
    action 'QUOTE' (noprec):   reduce start --> scheme
    action 'LPAREN' (noprec):   reduce start --> scheme
    action 'RPAREN' (noprec):   reduce start --> scheme
    action 'SLASH' (noprec):   reduce start --> scheme
    action 'BSLASH' (noprec):   reduce start --> scheme
    action 'PRIME' (noprec):   reduce start --> scheme
    action 'LCURLY' (noprec):   reduce start --> scheme
    action 'RCURLY' (noprec):   reduce start --> scheme
    action 'GLOBALLY' (noprec):   reduce start --> scheme
    action 'SCHEME' (noprec):   reduce start --> scheme
    action 'CLASS' (noprec):   reduce start --> scheme
    action 'TYPE' (noprec):   reduce start --> scheme
    action 'VALUE' (noprec):   reduce start --> scheme
    action 'AXIOM' (noprec):   reduce start --> scheme
    action 'END' (noprec):   reduce start --> scheme
    action 'ALL' (noprec):   reduce start --> scheme
    action 'EXISTS' (noprec):   reduce start --> scheme
    action 'EXACTLY_ONE' (noprec):   reduce start --> scheme
    action 'TS' (noprec):   reduce start --> scheme
    action 'TR' (noprec):   reduce start --> scheme
    action 'WHERE' (noprec):   reduce start --> scheme
    action 'VARIABLE' (noprec):   reduce start --> scheme
    action 'INIT_CONSTRAINT' (noprec):   reduce start --> scheme
    action 'ARRAY' (noprec):   reduce start --> scheme
    action 'OF' (noprec):   reduce start --> scheme
    action 'LTL_ASSERTION' (noprec):   reduce start --> scheme
    action 'DETERMINISTIC' (noprec):   reduce start --> scheme
    action 'NONDETERMINISTIC' (noprec):   reduce start --> scheme
    action 'IS' (noprec):   reduce start --> scheme
    action 'EQ' (noprec):   reduce start --> scheme
    action 'LT' (noprec):   reduce start --> scheme
    action 'LE' (noprec):   reduce start --> scheme
    action 'GT' (noprec):   reduce start --> scheme
    action 'GE' (noprec):   reduce start --> scheme
    action 'MI' (noprec):   reduce start --> scheme
    action 'PL' (noprec):   reduce start --> scheme
    action 'GU' (noprec):   reduce start --> scheme
    action 'IM' (noprec):   reduce start --> scheme
    action 'LAND' (noprec):   reduce start --> scheme
    action 'LOR' (noprec):   reduce start --> scheme
    action 'NEG' (noprec):   reduce start --> scheme
    action 'FALSE' (noprec):   reduce start --> scheme
    action 'TRUE' (noprec):   reduce start --> scheme
    action 'CHAR' (noprec):   reduce start --> scheme
    action 'TEXT' (noprec):   reduce start --> scheme
    action 'INT' (noprec):   reduce start --> scheme
    action 'ID' (noprec):   reduce start --> scheme
    action 'error' (noprec):   reduce start --> scheme
    action '#' (noprec):   reduce start --> scheme
    action '$$' (noprec):   reduce start --> scheme
  immediate action:   reduce start --> scheme  gotos:state 3:  items:    scheme -> 'SCHEME' . 'TEXT' 'EQ' 'CLASS' declarations 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 4
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 4:  items:    scheme -> 'SCHEME' 'TEXT' . 'EQ' 'CLASS' declarations 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 5
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 5:  items:    scheme -> 'SCHEME' 'TEXT' 'EQ' . 'CLASS' declarations 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   shift 6
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 6:  items:    scheme -> 'SCHEME' 'TEXT' 'EQ' 'CLASS' . declarations 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   shift 11
    action 'VALUE' (noprec):   shift 13
    action 'AXIOM' (noprec):   shift 15
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   shift 17
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   shift 23
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto declarations: 7
    goto declaration: 9
state 7:  items:    scheme -> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations . 'END'
    declarations -> declarations . declaration
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   shift 11
    action 'VALUE' (noprec):   shift 13
    action 'AXIOM' (noprec):   shift 15
    action 'END' (noprec):   shift 8
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   shift 17
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   shift 23
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto declaration: 10
state 8:  items:    scheme -> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END' . 
  actions:    action 'EOF' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'DOT' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'COMMA' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'COLON' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'BAR' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LBRACKET' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'RBRACKET' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'QUOTE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LPAREN' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'RPAREN' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'SLASH' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'BSLASH' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'PRIME' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LCURLY' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'RCURLY' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'GLOBALLY' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'SCHEME' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'CLASS' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'TYPE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'VALUE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'AXIOM' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'END' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'ALL' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'EXISTS' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'EXACTLY_ONE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'TS' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'TR' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'WHERE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'VARIABLE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'INIT_CONSTRAINT' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'ARRAY' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'OF' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LTL_ASSERTION' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'DETERMINISTIC' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'NONDETERMINISTIC' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'IS' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'EQ' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LT' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'GT' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'GE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'MI' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'PL' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'GU' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'IM' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LAND' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'LOR' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'NEG' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'FALSE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'TRUE' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'CHAR' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'TEXT' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'INT' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'ID' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action 'error' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action '#' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
    action '$$' (noprec):   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'
  immediate action:   reduce scheme --> 'SCHEME' 'TEXT' 'EQ' 'CLASS' declarations 'END'  gotos:state 9:  items:    declarations -> declaration . 
  actions:    action 'EOF' (noprec):   reduce declarations --> declaration
    action 'DOT' (noprec):   reduce declarations --> declaration
    action 'COMMA' (noprec):   reduce declarations --> declaration
    action 'COLON' (noprec):   reduce declarations --> declaration
    action 'BAR' (noprec):   reduce declarations --> declaration
    action 'LBRACKET' (noprec):   reduce declarations --> declaration
    action 'RBRACKET' (noprec):   reduce declarations --> declaration
    action 'QUOTE' (noprec):   reduce declarations --> declaration
    action 'LPAREN' (noprec):   reduce declarations --> declaration
    action 'RPAREN' (noprec):   reduce declarations --> declaration
    action 'SLASH' (noprec):   reduce declarations --> declaration
    action 'BSLASH' (noprec):   reduce declarations --> declaration
    action 'PRIME' (noprec):   reduce declarations --> declaration
    action 'LCURLY' (noprec):   reduce declarations --> declaration
    action 'RCURLY' (noprec):   reduce declarations --> declaration
    action 'GLOBALLY' (noprec):   reduce declarations --> declaration
    action 'SCHEME' (noprec):   reduce declarations --> declaration
    action 'CLASS' (noprec):   reduce declarations --> declaration
    action 'TYPE' (noprec):   reduce declarations --> declaration
    action 'VALUE' (noprec):   reduce declarations --> declaration
    action 'AXIOM' (noprec):   reduce declarations --> declaration
    action 'END' (noprec):   reduce declarations --> declaration
    action 'ALL' (noprec):   reduce declarations --> declaration
    action 'EXISTS' (noprec):   reduce declarations --> declaration
    action 'EXACTLY_ONE' (noprec):   reduce declarations --> declaration
    action 'TS' (noprec):   reduce declarations --> declaration
    action 'TR' (noprec):   reduce declarations --> declaration
    action 'WHERE' (noprec):   reduce declarations --> declaration
    action 'VARIABLE' (noprec):   reduce declarations --> declaration
    action 'INIT_CONSTRAINT' (noprec):   reduce declarations --> declaration
    action 'ARRAY' (noprec):   reduce declarations --> declaration
    action 'OF' (noprec):   reduce declarations --> declaration
    action 'LTL_ASSERTION' (noprec):   reduce declarations --> declaration
    action 'DETERMINISTIC' (noprec):   reduce declarations --> declaration
    action 'NONDETERMINISTIC' (noprec):   reduce declarations --> declaration
    action 'IS' (noprec):   reduce declarations --> declaration
    action 'EQ' (noprec):   reduce declarations --> declaration
    action 'LT' (noprec):   reduce declarations --> declaration
    action 'LE' (noprec):   reduce declarations --> declaration
    action 'GT' (noprec):   reduce declarations --> declaration
    action 'GE' (noprec):   reduce declarations --> declaration
    action 'MI' (noprec):   reduce declarations --> declaration
    action 'PL' (noprec):   reduce declarations --> declaration
    action 'GU' (noprec):   reduce declarations --> declaration
    action 'IM' (noprec):   reduce declarations --> declaration
    action 'LAND' (noprec):   reduce declarations --> declaration
    action 'LOR' (noprec):   reduce declarations --> declaration
    action 'NEG' (noprec):   reduce declarations --> declaration
    action 'FALSE' (noprec):   reduce declarations --> declaration
    action 'TRUE' (noprec):   reduce declarations --> declaration
    action 'CHAR' (noprec):   reduce declarations --> declaration
    action 'TEXT' (noprec):   reduce declarations --> declaration
    action 'INT' (noprec):   reduce declarations --> declaration
    action 'ID' (noprec):   reduce declarations --> declaration
    action 'error' (noprec):   reduce declarations --> declaration
    action '#' (noprec):   reduce declarations --> declaration
    action '$$' (noprec):   reduce declarations --> declaration
  immediate action:   reduce declarations --> declaration  gotos:state 10:  items:    declarations -> declarations declaration . 
  actions:    action 'EOF' (noprec):   reduce declarations --> declarations declaration
    action 'DOT' (noprec):   reduce declarations --> declarations declaration
    action 'COMMA' (noprec):   reduce declarations --> declarations declaration
    action 'COLON' (noprec):   reduce declarations --> declarations declaration
    action 'BAR' (noprec):   reduce declarations --> declarations declaration
    action 'LBRACKET' (noprec):   reduce declarations --> declarations declaration
    action 'RBRACKET' (noprec):   reduce declarations --> declarations declaration
    action 'QUOTE' (noprec):   reduce declarations --> declarations declaration
    action 'LPAREN' (noprec):   reduce declarations --> declarations declaration
    action 'RPAREN' (noprec):   reduce declarations --> declarations declaration
    action 'SLASH' (noprec):   reduce declarations --> declarations declaration
    action 'BSLASH' (noprec):   reduce declarations --> declarations declaration
    action 'PRIME' (noprec):   reduce declarations --> declarations declaration
    action 'LCURLY' (noprec):   reduce declarations --> declarations declaration
    action 'RCURLY' (noprec):   reduce declarations --> declarations declaration
    action 'GLOBALLY' (noprec):   reduce declarations --> declarations declaration
    action 'SCHEME' (noprec):   reduce declarations --> declarations declaration
    action 'CLASS' (noprec):   reduce declarations --> declarations declaration
    action 'TYPE' (noprec):   reduce declarations --> declarations declaration
    action 'VALUE' (noprec):   reduce declarations --> declarations declaration
    action 'AXIOM' (noprec):   reduce declarations --> declarations declaration
    action 'END' (noprec):   reduce declarations --> declarations declaration
    action 'ALL' (noprec):   reduce declarations --> declarations declaration
    action 'EXISTS' (noprec):   reduce declarations --> declarations declaration
    action 'EXACTLY_ONE' (noprec):   reduce declarations --> declarations declaration
    action 'TS' (noprec):   reduce declarations --> declarations declaration
    action 'TR' (noprec):   reduce declarations --> declarations declaration
    action 'WHERE' (noprec):   reduce declarations --> declarations declaration
    action 'VARIABLE' (noprec):   reduce declarations --> declarations declaration
    action 'INIT_CONSTRAINT' (noprec):   reduce declarations --> declarations declaration
    action 'ARRAY' (noprec):   reduce declarations --> declarations declaration
    action 'OF' (noprec):   reduce declarations --> declarations declaration
    action 'LTL_ASSERTION' (noprec):   reduce declarations --> declarations declaration
    action 'DETERMINISTIC' (noprec):   reduce declarations --> declarations declaration
    action 'NONDETERMINISTIC' (noprec):   reduce declarations --> declarations declaration
    action 'IS' (noprec):   reduce declarations --> declarations declaration
    action 'EQ' (noprec):   reduce declarations --> declarations declaration
    action 'LT' (noprec):   reduce declarations --> declarations declaration
    action 'LE' (noprec):   reduce declarations --> declarations declaration
    action 'GT' (noprec):   reduce declarations --> declarations declaration
    action 'GE' (noprec):   reduce declarations --> declarations declaration
    action 'MI' (noprec):   reduce declarations --> declarations declaration
    action 'PL' (noprec):   reduce declarations --> declarations declaration
    action 'GU' (noprec):   reduce declarations --> declarations declaration
    action 'IM' (noprec):   reduce declarations --> declarations declaration
    action 'LAND' (noprec):   reduce declarations --> declarations declaration
    action 'LOR' (noprec):   reduce declarations --> declarations declaration
    action 'NEG' (noprec):   reduce declarations --> declarations declaration
    action 'FALSE' (noprec):   reduce declarations --> declarations declaration
    action 'TRUE' (noprec):   reduce declarations --> declarations declaration
    action 'CHAR' (noprec):   reduce declarations --> declarations declaration
    action 'TEXT' (noprec):   reduce declarations --> declarations declaration
    action 'INT' (noprec):   reduce declarations --> declarations declaration
    action 'ID' (noprec):   reduce declarations --> declarations declaration
    action 'error' (noprec):   reduce declarations --> declarations declaration
    action '#' (noprec):   reduce declarations --> declarations declaration
    action '$$' (noprec):   reduce declarations --> declarations declaration
  immediate action:   reduce declarations --> declarations declaration  gotos:state 11:  items:    declaration -> 'TYPE' . type_declarations
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 170
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_declarations: 12
state 12:  items:    declaration -> 'TYPE' type_declarations . 
    type_declarations -> type_declarations . 'COMMA' 'TEXT' type_definition
  actions:    action 'EOF' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'DOT' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'COMMA' (noprec):   shift 172
    action 'COLON' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'BAR' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LBRACKET' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'RBRACKET' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'QUOTE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LPAREN' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'RPAREN' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'SLASH' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'BSLASH' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'PRIME' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LCURLY' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'RCURLY' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'GLOBALLY' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'SCHEME' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'CLASS' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'TYPE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'VALUE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'AXIOM' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'END' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'ALL' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'EXISTS' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'EXACTLY_ONE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'TS' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'TR' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'WHERE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'VARIABLE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'INIT_CONSTRAINT' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'ARRAY' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'OF' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LTL_ASSERTION' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'DETERMINISTIC' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'NONDETERMINISTIC' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'IS' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'EQ' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LT' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'GT' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'GE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'MI' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'PL' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'GU' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'IM' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LAND' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'LOR' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'NEG' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'FALSE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'TRUE' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'CHAR' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'TEXT' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'INT' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'ID' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action 'error' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action '#' (noprec):   reduce declaration --> 'TYPE' type_declarations
    action '$$' (noprec):   reduce declaration --> 'TYPE' type_declarations
  immediate action: <none>  gotos:state 13:  items:    declaration -> 'VALUE' . value_declarations
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto identifier: 159
    goto value_declarations: 14
    goto value_declaration: 156
state 14:  items:    declaration -> 'VALUE' value_declarations . 
    value_declarations -> value_declarations . 'COMMA' value_declaration
  actions:    action 'EOF' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'DOT' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'COMMA' (noprec):   shift 157
    action 'COLON' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'BAR' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LBRACKET' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'RBRACKET' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'QUOTE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LPAREN' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'RPAREN' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'SLASH' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'BSLASH' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'PRIME' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LCURLY' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'RCURLY' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'GLOBALLY' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'SCHEME' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'CLASS' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'TYPE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'VALUE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'AXIOM' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'END' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'ALL' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'EXISTS' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'EXACTLY_ONE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'TS' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'TR' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'WHERE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'VARIABLE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'INIT_CONSTRAINT' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'ARRAY' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'OF' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LTL_ASSERTION' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'DETERMINISTIC' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'NONDETERMINISTIC' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'IS' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'EQ' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LT' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'GT' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'GE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'MI' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'PL' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'GU' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'IM' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LAND' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'LOR' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'NEG' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'FALSE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'TRUE' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'CHAR' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'TEXT' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'INT' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'ID' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action 'error' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action '#' (noprec):   reduce declaration --> 'VALUE' value_declarations
    action '$$' (noprec):   reduce declaration --> 'VALUE' value_declarations
  immediate action: <none>  gotos:state 15:  items:    declaration -> 'AXIOM' . value_expressions
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expressions: 16
    goto value_expression: 87
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 16:  items:    declaration -> 'AXIOM' value_expressions . 
    value_expressions -> value_expressions . 'COMMA' value_expression
  actions:    action 'EOF' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'DOT' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'COMMA' (noprec):   shift 91
    action 'COLON' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'BAR' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LBRACKET' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'RBRACKET' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'QUOTE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LPAREN' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'RPAREN' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'SLASH' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'BSLASH' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'PRIME' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LCURLY' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'RCURLY' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'GLOBALLY' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'SCHEME' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'CLASS' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'TYPE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'VALUE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'AXIOM' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'END' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'ALL' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'EXISTS' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'EXACTLY_ONE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'TS' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'TR' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'WHERE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'VARIABLE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'INIT_CONSTRAINT' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'ARRAY' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'OF' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LTL_ASSERTION' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'DETERMINISTIC' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'NONDETERMINISTIC' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'IS' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'EQ' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LT' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'GT' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'GE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'MI' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'PL' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'GU' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'IM' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LAND' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'LOR' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'NEG' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'FALSE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'TRUE' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'CHAR' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'TEXT' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'INT' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'ID' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action 'error' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action '#' (noprec):   reduce declaration --> 'AXIOM' value_expressions
    action '$$' (noprec):   reduce declaration --> 'AXIOM' value_expressions
  immediate action: <none>  gotos:state 17:  items:    declaration -> 'TS' . 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 18
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 18:  items:    declaration -> 'TS' 'LBRACKET' . 'TEXT' 'RBRACKET' transition_systems 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 19
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 19:  items:    declaration -> 'TS' 'LBRACKET' 'TEXT' . 'RBRACKET' transition_systems 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 20
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 20:  items:    declaration -> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' . transition_systems 'END'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   shift 41
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   shift 37
    action 'INIT_CONSTRAINT' (noprec):   shift 39
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto transition_systems: 21
    goto transition_system: 35
state 21:  items:    declaration -> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems . 'END'
    transition_systems -> transition_systems . transition_system
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   shift 22
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   shift 41
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   shift 37
    action 'INIT_CONSTRAINT' (noprec):   shift 39
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto transition_system: 36
state 22:  items:    declaration -> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END' . 
  actions:    action 'EOF' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'DOT' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'COMMA' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'COLON' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'BAR' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LBRACKET' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'RBRACKET' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'QUOTE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LPAREN' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'RPAREN' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'SLASH' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'BSLASH' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'PRIME' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LCURLY' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'RCURLY' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'GLOBALLY' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'SCHEME' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'CLASS' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'TYPE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'VALUE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'AXIOM' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'END' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'ALL' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'EXISTS' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'EXACTLY_ONE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'TS' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'TR' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'WHERE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'VARIABLE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'INIT_CONSTRAINT' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'ARRAY' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'OF' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LTL_ASSERTION' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'DETERMINISTIC' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'NONDETERMINISTIC' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'IS' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'EQ' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LT' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'GT' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'GE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'MI' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'PL' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'GU' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'IM' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LAND' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'LOR' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'NEG' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'FALSE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'TRUE' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'CHAR' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'TEXT' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'INT' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'ID' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action 'error' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action '#' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
    action '$$' (noprec):   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'
  immediate action:   reduce declaration --> 'TS' 'LBRACKET' 'TEXT' 'RBRACKET' transition_systems 'END'  gotos:state 23:  items:    declaration -> 'LTL_ASSERTION' . ltl_assertions
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 28
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto ltl_assertions: 24
    goto ltl_assertion: 25
state 24:  items:    declaration -> 'LTL_ASSERTION' ltl_assertions . 
    ltl_assertions -> ltl_assertions . 'COMMA' ltl_assertion
  actions:    action 'EOF' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'DOT' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'COMMA' (noprec):   shift 26
    action 'COLON' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'BAR' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LBRACKET' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'RBRACKET' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'QUOTE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LPAREN' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'RPAREN' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'SLASH' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'BSLASH' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'PRIME' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LCURLY' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'RCURLY' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'GLOBALLY' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'SCHEME' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'CLASS' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'TYPE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'VALUE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'AXIOM' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'END' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'ALL' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'EXISTS' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'EXACTLY_ONE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'TS' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'TR' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'WHERE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'VARIABLE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'INIT_CONSTRAINT' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'ARRAY' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'OF' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LTL_ASSERTION' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'DETERMINISTIC' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'NONDETERMINISTIC' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'IS' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'EQ' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LT' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'GT' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'GE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'MI' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'PL' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'GU' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'IM' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LAND' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'LOR' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'NEG' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'FALSE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'TRUE' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'CHAR' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'TEXT' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'INT' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'ID' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action 'error' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action '#' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
    action '$$' (noprec):   reduce declaration --> 'LTL_ASSERTION' ltl_assertions
  immediate action: <none>  gotos:state 25:  items:    ltl_assertions -> ltl_assertion . 
  actions:    action 'EOF' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'DOT' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'COMMA' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'COLON' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'BAR' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LBRACKET' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'RBRACKET' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'QUOTE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LPAREN' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'RPAREN' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'SLASH' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'BSLASH' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'PRIME' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LCURLY' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'RCURLY' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'GLOBALLY' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'SCHEME' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'CLASS' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'TYPE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'VALUE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'AXIOM' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'END' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'ALL' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'EXISTS' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'EXACTLY_ONE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'TS' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'TR' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'WHERE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'VARIABLE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'INIT_CONSTRAINT' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'ARRAY' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'OF' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LTL_ASSERTION' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'DETERMINISTIC' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'NONDETERMINISTIC' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'IS' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'EQ' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LT' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'GT' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'GE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'MI' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'PL' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'GU' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'IM' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LAND' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'LOR' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'NEG' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'FALSE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'TRUE' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'CHAR' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'TEXT' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'INT' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'ID' (noprec):   reduce ltl_assertions --> ltl_assertion
    action 'error' (noprec):   reduce ltl_assertions --> ltl_assertion
    action '#' (noprec):   reduce ltl_assertions --> ltl_assertion
    action '$$' (noprec):   reduce ltl_assertions --> ltl_assertion
  immediate action:   reduce ltl_assertions --> ltl_assertion  gotos:state 26:  items:    ltl_assertions -> ltl_assertions 'COMMA' . ltl_assertion
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 28
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto ltl_assertion: 27
state 27:  items:    ltl_assertions -> ltl_assertions 'COMMA' ltl_assertion . 
  actions:    action 'EOF' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'DOT' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'COMMA' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'COLON' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'BAR' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LBRACKET' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'RBRACKET' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'QUOTE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LPAREN' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'RPAREN' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'SLASH' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'BSLASH' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'PRIME' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LCURLY' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'RCURLY' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'GLOBALLY' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'SCHEME' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'CLASS' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'TYPE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'VALUE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'AXIOM' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'END' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'ALL' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'EXISTS' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'EXACTLY_ONE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'TS' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'TR' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'WHERE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'VARIABLE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'INIT_CONSTRAINT' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'ARRAY' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'OF' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LTL_ASSERTION' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'DETERMINISTIC' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'NONDETERMINISTIC' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'IS' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'EQ' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LT' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'GT' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'GE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'MI' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'PL' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'GU' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'IM' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LAND' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'LOR' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'NEG' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'FALSE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'TRUE' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'CHAR' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'TEXT' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'INT' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'ID' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action 'error' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action '#' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
    action '$$' (noprec):   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion
  immediate action:   reduce ltl_assertions --> ltl_assertions 'COMMA' ltl_assertion  gotos:state 28:  items:    ltl_assertion -> 'LBRACKET' . 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 29
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 29:  items:    ltl_assertion -> 'LBRACKET' 'TEXT' . 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 30
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 30:  items:    ltl_assertion -> 'LBRACKET' 'TEXT' 'RBRACKET' . 'TEXT' 'BAR' 'MI' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 31
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 31:  items:    ltl_assertion -> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' . 'BAR' 'MI' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   shift 32
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 32:  items:    ltl_assertion -> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' . 'MI' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (explicit left 9999):   shift 33
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 33:  items:    ltl_assertion -> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 34
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 34:  items:    ltl_assertion -> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'DOT' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'COMMA' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'COLON' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'BAR' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'LBRACKET' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'RBRACKET' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'QUOTE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'LPAREN' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'RPAREN' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'SLASH' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'BSLASH' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'PRIME' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'LCURLY' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'RCURLY' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'GLOBALLY' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'SCHEME' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'CLASS' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'TYPE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'VALUE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'AXIOM' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'END' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'ALL' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'EXISTS' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'EXACTLY_ONE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'TS' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'TR' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'WHERE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'VARIABLE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'ARRAY' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'OF' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'LTL_ASSERTION' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'DETERMINISTIC' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'NONDETERMINISTIC' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'IS' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'TRUE' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'CHAR' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'TEXT' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'INT' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'ID' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action 'error' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action '#' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
    action '$$' (explicit left 9999):   reduce ltl_assertion --> 'LBRACKET' 'TEXT' 'RBRACKET' 'TEXT' 'BAR' 'MI' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 35:  items:    transition_systems -> transition_system . 
  actions:    action 'EOF' (noprec):   reduce transition_systems --> transition_system
    action 'DOT' (noprec):   reduce transition_systems --> transition_system
    action 'COMMA' (noprec):   reduce transition_systems --> transition_system
    action 'COLON' (noprec):   reduce transition_systems --> transition_system
    action 'BAR' (noprec):   reduce transition_systems --> transition_system
    action 'LBRACKET' (noprec):   reduce transition_systems --> transition_system
    action 'RBRACKET' (noprec):   reduce transition_systems --> transition_system
    action 'QUOTE' (noprec):   reduce transition_systems --> transition_system
    action 'LPAREN' (noprec):   reduce transition_systems --> transition_system
    action 'RPAREN' (noprec):   reduce transition_systems --> transition_system
    action 'SLASH' (noprec):   reduce transition_systems --> transition_system
    action 'BSLASH' (noprec):   reduce transition_systems --> transition_system
    action 'PRIME' (noprec):   reduce transition_systems --> transition_system
    action 'LCURLY' (noprec):   reduce transition_systems --> transition_system
    action 'RCURLY' (noprec):   reduce transition_systems --> transition_system
    action 'GLOBALLY' (noprec):   reduce transition_systems --> transition_system
    action 'SCHEME' (noprec):   reduce transition_systems --> transition_system
    action 'CLASS' (noprec):   reduce transition_systems --> transition_system
    action 'TYPE' (noprec):   reduce transition_systems --> transition_system
    action 'VALUE' (noprec):   reduce transition_systems --> transition_system
    action 'AXIOM' (noprec):   reduce transition_systems --> transition_system
    action 'END' (noprec):   reduce transition_systems --> transition_system
    action 'ALL' (noprec):   reduce transition_systems --> transition_system
    action 'EXISTS' (noprec):   reduce transition_systems --> transition_system
    action 'EXACTLY_ONE' (noprec):   reduce transition_systems --> transition_system
    action 'TS' (noprec):   reduce transition_systems --> transition_system
    action 'TR' (noprec):   reduce transition_systems --> transition_system
    action 'WHERE' (noprec):   reduce transition_systems --> transition_system
    action 'VARIABLE' (noprec):   reduce transition_systems --> transition_system
    action 'INIT_CONSTRAINT' (noprec):   reduce transition_systems --> transition_system
    action 'ARRAY' (noprec):   reduce transition_systems --> transition_system
    action 'OF' (noprec):   reduce transition_systems --> transition_system
    action 'LTL_ASSERTION' (noprec):   reduce transition_systems --> transition_system
    action 'DETERMINISTIC' (noprec):   reduce transition_systems --> transition_system
    action 'NONDETERMINISTIC' (noprec):   reduce transition_systems --> transition_system
    action 'IS' (noprec):   reduce transition_systems --> transition_system
    action 'EQ' (noprec):   reduce transition_systems --> transition_system
    action 'LT' (noprec):   reduce transition_systems --> transition_system
    action 'LE' (noprec):   reduce transition_systems --> transition_system
    action 'GT' (noprec):   reduce transition_systems --> transition_system
    action 'GE' (noprec):   reduce transition_systems --> transition_system
    action 'MI' (noprec):   reduce transition_systems --> transition_system
    action 'PL' (noprec):   reduce transition_systems --> transition_system
    action 'GU' (noprec):   reduce transition_systems --> transition_system
    action 'IM' (noprec):   reduce transition_systems --> transition_system
    action 'LAND' (noprec):   reduce transition_systems --> transition_system
    action 'LOR' (noprec):   reduce transition_systems --> transition_system
    action 'NEG' (noprec):   reduce transition_systems --> transition_system
    action 'FALSE' (noprec):   reduce transition_systems --> transition_system
    action 'TRUE' (noprec):   reduce transition_systems --> transition_system
    action 'CHAR' (noprec):   reduce transition_systems --> transition_system
    action 'TEXT' (noprec):   reduce transition_systems --> transition_system
    action 'INT' (noprec):   reduce transition_systems --> transition_system
    action 'ID' (noprec):   reduce transition_systems --> transition_system
    action 'error' (noprec):   reduce transition_systems --> transition_system
    action '#' (noprec):   reduce transition_systems --> transition_system
    action '$$' (noprec):   reduce transition_systems --> transition_system
  immediate action:   reduce transition_systems --> transition_system  gotos:state 36:  items:    transition_systems -> transition_systems transition_system . 
  actions:    action 'EOF' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'DOT' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'COMMA' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'COLON' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'BAR' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LBRACKET' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'RBRACKET' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'QUOTE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LPAREN' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'RPAREN' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'SLASH' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'BSLASH' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'PRIME' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LCURLY' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'RCURLY' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'GLOBALLY' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'SCHEME' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'CLASS' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'TYPE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'VALUE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'AXIOM' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'END' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'ALL' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'EXISTS' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'EXACTLY_ONE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'TS' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'TR' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'WHERE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'VARIABLE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'INIT_CONSTRAINT' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'ARRAY' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'OF' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LTL_ASSERTION' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'DETERMINISTIC' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'NONDETERMINISTIC' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'IS' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'EQ' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LT' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'GT' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'GE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'MI' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'PL' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'GU' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'IM' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LAND' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'LOR' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'NEG' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'FALSE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'TRUE' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'CHAR' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'TEXT' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'INT' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'ID' (noprec):   reduce transition_systems --> transition_systems transition_system
    action 'error' (noprec):   reduce transition_systems --> transition_systems transition_system
    action '#' (noprec):   reduce transition_systems --> transition_systems transition_system
    action '$$' (noprec):   reduce transition_systems --> transition_systems transition_system
  immediate action:   reduce transition_systems --> transition_systems transition_system  gotos:state 37:  items:    transition_system -> 'VARIABLE' . variable_definitions
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto variable_definitions: 38
    goto variable_definition: 74
    goto identifier: 77
state 38:  items:    transition_system -> 'VARIABLE' variable_definitions . 
    variable_definitions -> variable_definitions . 'COMMA' variable_definition
  actions:    action 'EOF' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'DOT' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'COMMA' (noprec):   shift 75
    action 'COLON' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'BAR' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LBRACKET' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'RBRACKET' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'QUOTE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LPAREN' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'RPAREN' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'SLASH' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'BSLASH' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'PRIME' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LCURLY' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'RCURLY' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'GLOBALLY' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'SCHEME' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'CLASS' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'TYPE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'VALUE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'AXIOM' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'END' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'ALL' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'EXISTS' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'EXACTLY_ONE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'TS' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'TR' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'WHERE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'VARIABLE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'INIT_CONSTRAINT' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'ARRAY' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'OF' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LTL_ASSERTION' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'DETERMINISTIC' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'NONDETERMINISTIC' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'IS' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'EQ' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LT' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'GT' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'GE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'MI' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'PL' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'GU' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'IM' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LAND' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'LOR' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'NEG' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'FALSE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'TRUE' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'CHAR' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'TEXT' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'INT' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'ID' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action 'error' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action '#' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
    action '$$' (noprec):   reduce transition_system --> 'VARIABLE' variable_definitions
  immediate action: <none>  gotos:state 39:  items:    transition_system -> 'INIT_CONSTRAINT' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 40
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 40:  items:    transition_system -> 'INIT_CONSTRAINT' value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'DOT' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'COMMA' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'COLON' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'BAR' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'LBRACKET' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'RBRACKET' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'QUOTE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'LPAREN' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'RPAREN' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'SLASH' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'BSLASH' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'PRIME' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'LCURLY' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'RCURLY' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'GLOBALLY' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'SCHEME' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'CLASS' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'TYPE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'VALUE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'AXIOM' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'END' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'ALL' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'EXISTS' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'EXACTLY_ONE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'TS' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'TR' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'WHERE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'VARIABLE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'INIT_CONSTRAINT' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'ARRAY' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'OF' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'LTL_ASSERTION' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'DETERMINISTIC' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'NONDETERMINISTIC' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'IS' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'TRUE' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'CHAR' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'TEXT' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'INT' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'ID' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action 'error' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action '#' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
    action '$$' (noprec):   reduce transition_system --> 'INIT_CONSTRAINT' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 41:  items:    transition_system -> 'TR' . named_rule where
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 57
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 63
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 62
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto named_rule: 42
    goto guarded_value_expr: 67
    goto value_expression: 71
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 42:  items:    transition_system -> 'TR' named_rule . where
    named_rule -> named_rule . choice named_rule
  actions:    action 'EOF' (noprec):   reduce where --> 
    action 'DOT' (noprec):   reduce where --> 
    action 'COMMA' (noprec):   reduce where --> 
    action 'COLON' (noprec):   reduce where --> 
    action 'BAR' (noprec):   reduce where --> 
    action 'LBRACKET' (noprec):   reduce where --> 
    action 'RBRACKET' (noprec):   reduce where --> 
    action 'QUOTE' (noprec):   reduce where --> 
    action 'LPAREN' (noprec):   reduce where --> 
    action 'RPAREN' (noprec):   reduce where --> 
    action 'SLASH' (noprec):   reduce where --> 
    action 'BSLASH' (noprec):   reduce where --> 
    action 'PRIME' (noprec):   reduce where --> 
    action 'LCURLY' (noprec):   reduce where --> 
    action 'RCURLY' (noprec):   reduce where --> 
    action 'GLOBALLY' (noprec):   reduce where --> 
    action 'SCHEME' (noprec):   reduce where --> 
    action 'CLASS' (noprec):   reduce where --> 
    action 'TYPE' (noprec):   reduce where --> 
    action 'VALUE' (noprec):   reduce where --> 
    action 'AXIOM' (noprec):   reduce where --> 
    action 'END' (noprec):   reduce where --> 
    action 'ALL' (noprec):   reduce where --> 
    action 'EXISTS' (noprec):   reduce where --> 
    action 'EXACTLY_ONE' (noprec):   reduce where --> 
    action 'TS' (noprec):   reduce where --> 
    action 'TR' (noprec):   reduce where --> 
    action 'WHERE' (noprec):   shift 44
    action 'VARIABLE' (noprec):   reduce where --> 
    action 'INIT_CONSTRAINT' (noprec):   reduce where --> 
    action 'ARRAY' (noprec):   reduce where --> 
    action 'OF' (noprec):   reduce where --> 
    action 'LTL_ASSERTION' (noprec):   reduce where --> 
    action 'DETERMINISTIC' (explicit left 9993):   shift 69
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 68
    action 'IS' (noprec):   reduce where --> 
    action 'EQ' (noprec):   reduce where --> 
    action 'LT' (noprec):   reduce where --> 
    action 'LE' (noprec):   reduce where --> 
    action 'GT' (noprec):   reduce where --> 
    action 'GE' (noprec):   reduce where --> 
    action 'MI' (noprec):   reduce where --> 
    action 'PL' (noprec):   reduce where --> 
    action 'GU' (noprec):   reduce where --> 
    action 'IM' (noprec):   reduce where --> 
    action 'LAND' (noprec):   reduce where --> 
    action 'LOR' (noprec):   reduce where --> 
    action 'NEG' (noprec):   reduce where --> 
    action 'FALSE' (noprec):   reduce where --> 
    action 'TRUE' (noprec):   reduce where --> 
    action 'CHAR' (noprec):   reduce where --> 
    action 'TEXT' (noprec):   reduce where --> 
    action 'INT' (noprec):   reduce where --> 
    action 'ID' (noprec):   reduce where --> 
    action 'error' (noprec):   reduce where --> 
    action '#' (noprec):   reduce where --> 
    action '$$' (noprec):   reduce where --> 
  immediate action: <none>  gotos:    goto where: 43
    goto choice: 61
state 43:  items:    transition_system -> 'TR' named_rule where . 
  actions:    action 'EOF' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'DOT' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'COMMA' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'COLON' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'BAR' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LBRACKET' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'RBRACKET' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'QUOTE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LPAREN' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'RPAREN' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'SLASH' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'BSLASH' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'PRIME' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LCURLY' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'RCURLY' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'GLOBALLY' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'SCHEME' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'CLASS' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'TYPE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'VALUE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'AXIOM' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'END' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'ALL' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'EXISTS' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'EXACTLY_ONE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'TS' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'TR' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'WHERE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'VARIABLE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'INIT_CONSTRAINT' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'ARRAY' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'OF' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LTL_ASSERTION' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'DETERMINISTIC' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'NONDETERMINISTIC' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'IS' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'EQ' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LT' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'GT' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'GE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'MI' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'PL' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'GU' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'IM' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LAND' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'LOR' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'NEG' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'FALSE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'TRUE' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'CHAR' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'TEXT' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'INT' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'ID' (noprec):   reduce transition_system --> 'TR' named_rule where
    action 'error' (noprec):   reduce transition_system --> 'TR' named_rule where
    action '#' (noprec):   reduce transition_system --> 'TR' named_rule where
    action '$$' (noprec):   reduce transition_system --> 'TR' named_rule where
  immediate action:   reduce transition_system --> 'TR' named_rule where  gotos:state 44:  items:    where -> 'WHERE' . named_rules
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 46
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto named_rules: 45
state 45:  items:    where -> 'WHERE' named_rules . 
    named_rules -> named_rules . 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
  actions:    action 'EOF' (noprec):   reduce where --> 'WHERE' named_rules
    action 'DOT' (noprec):   reduce where --> 'WHERE' named_rules
    action 'COMMA' (noprec):   shift 51
    action 'COLON' (noprec):   reduce where --> 'WHERE' named_rules
    action 'BAR' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LBRACKET' (noprec):   reduce where --> 'WHERE' named_rules
    action 'RBRACKET' (noprec):   reduce where --> 'WHERE' named_rules
    action 'QUOTE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LPAREN' (noprec):   reduce where --> 'WHERE' named_rules
    action 'RPAREN' (noprec):   reduce where --> 'WHERE' named_rules
    action 'SLASH' (noprec):   reduce where --> 'WHERE' named_rules
    action 'BSLASH' (noprec):   reduce where --> 'WHERE' named_rules
    action 'PRIME' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LCURLY' (noprec):   reduce where --> 'WHERE' named_rules
    action 'RCURLY' (noprec):   reduce where --> 'WHERE' named_rules
    action 'GLOBALLY' (noprec):   reduce where --> 'WHERE' named_rules
    action 'SCHEME' (noprec):   reduce where --> 'WHERE' named_rules
    action 'CLASS' (noprec):   reduce where --> 'WHERE' named_rules
    action 'TYPE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'VALUE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'AXIOM' (noprec):   reduce where --> 'WHERE' named_rules
    action 'END' (noprec):   reduce where --> 'WHERE' named_rules
    action 'ALL' (noprec):   reduce where --> 'WHERE' named_rules
    action 'EXISTS' (noprec):   reduce where --> 'WHERE' named_rules
    action 'EXACTLY_ONE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'TS' (noprec):   reduce where --> 'WHERE' named_rules
    action 'TR' (noprec):   reduce where --> 'WHERE' named_rules
    action 'WHERE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'VARIABLE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'INIT_CONSTRAINT' (noprec):   reduce where --> 'WHERE' named_rules
    action 'ARRAY' (noprec):   reduce where --> 'WHERE' named_rules
    action 'OF' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LTL_ASSERTION' (noprec):   reduce where --> 'WHERE' named_rules
    action 'DETERMINISTIC' (noprec):   reduce where --> 'WHERE' named_rules
    action 'NONDETERMINISTIC' (noprec):   reduce where --> 'WHERE' named_rules
    action 'IS' (noprec):   reduce where --> 'WHERE' named_rules
    action 'EQ' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LT' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'GT' (noprec):   reduce where --> 'WHERE' named_rules
    action 'GE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'MI' (noprec):   reduce where --> 'WHERE' named_rules
    action 'PL' (noprec):   reduce where --> 'WHERE' named_rules
    action 'GU' (noprec):   reduce where --> 'WHERE' named_rules
    action 'IM' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LAND' (noprec):   reduce where --> 'WHERE' named_rules
    action 'LOR' (noprec):   reduce where --> 'WHERE' named_rules
    action 'NEG' (noprec):   reduce where --> 'WHERE' named_rules
    action 'FALSE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'TRUE' (noprec):   reduce where --> 'WHERE' named_rules
    action 'CHAR' (noprec):   reduce where --> 'WHERE' named_rules
    action 'TEXT' (noprec):   reduce where --> 'WHERE' named_rules
    action 'INT' (noprec):   reduce where --> 'WHERE' named_rules
    action 'ID' (noprec):   reduce where --> 'WHERE' named_rules
    action 'error' (noprec):   reduce where --> 'WHERE' named_rules
    action '#' (noprec):   reduce where --> 'WHERE' named_rules
    action '$$' (noprec):   reduce where --> 'WHERE' named_rules
  immediate action: <none>  gotos:state 46:  items:    named_rules -> 'LBRACKET' . 'TEXT' 'RBRACKET' 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 47
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 47:  items:    named_rules -> 'LBRACKET' 'TEXT' . 'RBRACKET' 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 48
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 48:  items:    named_rules -> 'LBRACKET' 'TEXT' 'RBRACKET' . 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 49
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 49:  items:    named_rules -> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' . named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 57
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 63
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 62
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto named_rule: 50
    goto guarded_value_expr: 67
    goto value_expression: 71
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 50:  items:    named_rules -> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule . 
    named_rule -> named_rule . choice named_rule
  actions:    action 'EOF' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'DOT' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'COMMA' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'COLON' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'BAR' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LBRACKET' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'RBRACKET' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'QUOTE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LPAREN' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'RPAREN' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'SLASH' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'BSLASH' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'PRIME' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LCURLY' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'RCURLY' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GLOBALLY' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'SCHEME' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'CLASS' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TYPE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'VALUE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'AXIOM' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'END' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'ALL' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'EXISTS' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'EXACTLY_ONE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TS' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TR' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'WHERE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'VARIABLE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'ARRAY' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'OF' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LTL_ASSERTION' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'DETERMINISTIC' (explicit left 9993):   shift 69
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 68
    action 'IS' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'EQ' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LT' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GT' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'MI' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'PL' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GU' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'IM' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LAND' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LOR' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'NEG' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'FALSE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TRUE' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'CHAR' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TEXT' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'INT' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'ID' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'error' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action '#' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action '$$' (explicit right 9997):   reduce named_rules --> 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
  immediate action: <none>  gotos:    goto choice: 61
state 51:  items:    named_rules -> named_rules 'COMMA' . 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 52
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 52:  items:    named_rules -> named_rules 'COMMA' 'LBRACKET' . 'TEXT' 'RBRACKET' 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 53
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 53:  items:    named_rules -> named_rules 'COMMA' 'LBRACKET' 'TEXT' . 'RBRACKET' 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 54
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 54:  items:    named_rules -> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' . 'EQ' named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 55
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 55:  items:    named_rules -> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' . named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 57
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 63
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 62
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto named_rule: 56
    goto guarded_value_expr: 67
    goto value_expression: 71
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 56:  items:    named_rules -> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule . 
    named_rule -> named_rule . choice named_rule
  actions:    action 'EOF' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'DOT' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'COMMA' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'COLON' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'BAR' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LBRACKET' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'RBRACKET' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'QUOTE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LPAREN' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'RPAREN' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'SLASH' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'BSLASH' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'PRIME' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LCURLY' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'RCURLY' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GLOBALLY' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'SCHEME' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'CLASS' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TYPE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'VALUE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'AXIOM' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'END' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'ALL' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'EXISTS' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'EXACTLY_ONE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TS' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TR' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'WHERE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'VARIABLE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'ARRAY' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'OF' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LTL_ASSERTION' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'DETERMINISTIC' (explicit left 9993):   shift 69
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 68
    action 'IS' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'EQ' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LT' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GT' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'MI' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'PL' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'GU' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'IM' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LAND' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'LOR' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'NEG' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'FALSE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TRUE' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'CHAR' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'TEXT' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'INT' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'ID' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action 'error' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action '#' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
    action '$$' (explicit right 9997):   reduce named_rules --> named_rules 'COMMA' 'LBRACKET' 'TEXT' 'RBRACKET' 'EQ' named_rule
  immediate action: <none>  gotos:    goto choice: 61
state 57:  items:    named_rule -> 'LPAREN' . named_rule 'RPAREN'
    value_expression -> 'LPAREN' . value_expression 'RPAREN'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 57
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 63
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 62
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto named_rule: 58
    goto guarded_value_expr: 67
    goto value_expression: 70
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 58:  items:    named_rule -> 'LPAREN' named_rule . 'RPAREN'
    named_rule -> named_rule . choice named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 59
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 69
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 68
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto choice: 61
state 59:  items:    named_rule -> 'LPAREN' named_rule 'RPAREN' . 
  actions:    action 'EOF' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'DOT' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'COMMA' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'COLON' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'BAR' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LBRACKET' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'RBRACKET' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'QUOTE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LPAREN' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'RPAREN' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'SLASH' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'BSLASH' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'PRIME' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LCURLY' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'RCURLY' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'GLOBALLY' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'SCHEME' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'CLASS' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'TYPE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'VALUE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'AXIOM' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'END' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'ALL' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'EXISTS' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'EXACTLY_ONE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'TS' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'TR' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'WHERE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'VARIABLE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'INIT_CONSTRAINT' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'ARRAY' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'OF' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LTL_ASSERTION' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'DETERMINISTIC' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'NONDETERMINISTIC' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'IS' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'EQ' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LT' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'GT' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'GE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'MI' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'PL' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'GU' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'IM' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LAND' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'LOR' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'NEG' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'FALSE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'TRUE' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'CHAR' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'TEXT' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'INT' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'ID' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action 'error' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action '#' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
    action '$$' (noprec):   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'
  immediate action:   reduce named_rule --> 'LPAREN' named_rule 'RPAREN'  gotos:state 60:  items:    named_rule -> named_rule . choice named_rule
    named_rule -> named_rule choice named_rule . 
  actions:    action 'EOF' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'DOT' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'COMMA' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'COLON' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'BAR' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LBRACKET' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'RBRACKET' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'QUOTE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LPAREN' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'RPAREN' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'SLASH' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'BSLASH' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'PRIME' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LCURLY' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'RCURLY' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'GLOBALLY' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'SCHEME' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'CLASS' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'TYPE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'VALUE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'AXIOM' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'END' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'ALL' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'EXISTS' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'EXACTLY_ONE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'TS' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'TR' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'WHERE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'VARIABLE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'INIT_CONSTRAINT' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'ARRAY' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'OF' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LTL_ASSERTION' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'DETERMINISTIC' (explicit left 9993):   shift 69
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 68
    action 'IS' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'EQ' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LT' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'GT' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'GE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'MI' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'PL' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'GU' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'IM' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LAND' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'LOR' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'NEG' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'FALSE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'TRUE' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'CHAR' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'TEXT' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'INT' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'ID' (noprec):   reduce named_rule --> named_rule choice named_rule
    action 'error' (noprec):   reduce named_rule --> named_rule choice named_rule
    action '#' (noprec):   reduce named_rule --> named_rule choice named_rule
    action '$$' (noprec):   reduce named_rule --> named_rule choice named_rule
  immediate action: <none>  gotos:    goto choice: 61
state 61:  items:    named_rule -> named_rule choice . named_rule
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 57
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 63
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 62
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto named_rule: 60
    goto guarded_value_expr: 67
    goto value_expression: 71
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 62:  items:    named_rule -> 'TEXT' . 
    accessor -> 'TEXT' . 
    accessor -> 'TEXT' . 'PRIME'
    accessor -> 'TEXT' . 'LBRACKET' value_expressions 'RBRACKET'
    accessor -> 'TEXT' . 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
  actions:    action 'EOF' (noprec):   reduce named_rule --> 'TEXT'
    action 'DOT' (noprec):   reduce named_rule --> 'TEXT'
    action 'COMMA' (noprec):   reduce named_rule --> 'TEXT'
    action 'COLON' (noprec):   reduce named_rule --> 'TEXT'
    action 'BAR' (noprec):   reduce named_rule --> 'TEXT'
    action 'LBRACKET' (noprec):   shift 123
    action 'RBRACKET' (noprec):   reduce named_rule --> 'TEXT'
    action 'QUOTE' (noprec):   reduce named_rule --> 'TEXT'
    action 'LPAREN' (noprec):   reduce named_rule --> 'TEXT'
    action 'RPAREN' (noprec):   reduce named_rule --> 'TEXT'
    action 'SLASH' (noprec):   reduce named_rule --> 'TEXT'
    action 'BSLASH' (noprec):   reduce named_rule --> 'TEXT'
    action 'PRIME' (noprec):   shift 122
    action 'LCURLY' (noprec):   reduce named_rule --> 'TEXT'
    action 'RCURLY' (noprec):   reduce named_rule --> 'TEXT'
    action 'GLOBALLY' (noprec):   reduce named_rule --> 'TEXT'
    action 'SCHEME' (noprec):   reduce named_rule --> 'TEXT'
    action 'CLASS' (noprec):   reduce named_rule --> 'TEXT'
    action 'TYPE' (noprec):   reduce named_rule --> 'TEXT'
    action 'VALUE' (noprec):   reduce named_rule --> 'TEXT'
    action 'AXIOM' (noprec):   reduce named_rule --> 'TEXT'
    action 'END' (noprec):   reduce named_rule --> 'TEXT'
    action 'ALL' (noprec):   reduce named_rule --> 'TEXT'
    action 'EXISTS' (noprec):   reduce named_rule --> 'TEXT'
    action 'EXACTLY_ONE' (noprec):   reduce named_rule --> 'TEXT'
    action 'TS' (noprec):   reduce named_rule --> 'TEXT'
    action 'TR' (noprec):   reduce named_rule --> 'TEXT'
    action 'WHERE' (noprec):   reduce named_rule --> 'TEXT'
    action 'VARIABLE' (noprec):   reduce named_rule --> 'TEXT'
    action 'INIT_CONSTRAINT' (noprec):   reduce named_rule --> 'TEXT'
    action 'ARRAY' (noprec):   reduce named_rule --> 'TEXT'
    action 'OF' (noprec):   reduce named_rule --> 'TEXT'
    action 'LTL_ASSERTION' (noprec):   reduce named_rule --> 'TEXT'
    action 'DETERMINISTIC' (noprec):   reduce named_rule --> 'TEXT'
    action 'NONDETERMINISTIC' (noprec):   reduce named_rule --> 'TEXT'
    action 'IS' (noprec):   reduce named_rule --> 'TEXT'
    action 'EQ' (noprec):   reduce accessor --> 'TEXT'
    action 'LT' (noprec):   reduce accessor --> 'TEXT'
    action 'LE' (noprec):   reduce accessor --> 'TEXT'
    action 'GT' (noprec):   reduce accessor --> 'TEXT'
    action 'GE' (noprec):   reduce accessor --> 'TEXT'
    action 'MI' (noprec):   reduce accessor --> 'TEXT'
    action 'PL' (noprec):   reduce accessor --> 'TEXT'
    action 'GU' (noprec):   reduce accessor --> 'TEXT'
    action 'IM' (noprec):   reduce accessor --> 'TEXT'
    action 'LAND' (noprec):   reduce accessor --> 'TEXT'
    action 'LOR' (noprec):   reduce accessor --> 'TEXT'
    action 'NEG' (noprec):   reduce accessor --> 'TEXT'
    action 'FALSE' (noprec):   reduce named_rule --> 'TEXT'
    action 'TRUE' (noprec):   reduce named_rule --> 'TEXT'
    action 'CHAR' (noprec):   reduce named_rule --> 'TEXT'
    action 'TEXT' (noprec):   reduce named_rule --> 'TEXT'
    action 'INT' (noprec):   reduce named_rule --> 'TEXT'
    action 'ID' (noprec):   reduce named_rule --> 'TEXT'
    action 'error' (noprec):   reduce named_rule --> 'TEXT'
    action '#' (noprec):   reduce named_rule --> 'TEXT'
    action '$$' (noprec):   reduce named_rule --> 'TEXT'
  immediate action: <none>  gotos:state 63:  items:    named_rule -> 'NONDETERMINISTIC' . typing_list 'IS' guarded_value_expr
    quantifier -> 'NONDETERMINISTIC' . 
  actions:    action 'EOF' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'DOT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'COMMA' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'COLON' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'BAR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LBRACKET' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'RBRACKET' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'QUOTE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LPAREN' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'RPAREN' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'SLASH' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'BSLASH' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'PRIME' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LCURLY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'RCURLY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GLOBALLY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'SCHEME' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'CLASS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TYPE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'VALUE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'AXIOM' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'END' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'ALL' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'EXISTS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'EXACTLY_ONE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'WHERE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'VARIABLE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'INIT_CONSTRAINT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'ARRAY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'OF' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LTL_ASSERTION' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'DETERMINISTIC' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'NONDETERMINISTIC' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'IS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'EQ' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'MI' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'PL' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GU' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'IM' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LAND' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LOR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'NEG' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'FALSE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TRUE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'CHAR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TEXT' (noprec):   shift 83
    action 'INT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'ID' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'error' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action '#' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action '$$' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
  immediate action: <none>  gotos:    goto identifier: 163
    goto typing: 167
    goto typing_list: 64
    goto rev_typing_list: 166
state 64:  items:    named_rule -> 'NONDETERMINISTIC' typing_list . 'IS' guarded_value_expr
    rev_typing_list -> typing_list . 'COMMA' typing
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   shift 168
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (explicit right 9994):   shift 65
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 65:  items:    named_rule -> 'NONDETERMINISTIC' typing_list 'IS' . guarded_value_expr
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto guarded_value_expr: 66
    goto value_expression: 71
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 66:  items:    named_rule -> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr . 
  actions:    action 'EOF' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'DOT' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'COMMA' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'COLON' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'BAR' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LBRACKET' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'RBRACKET' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'QUOTE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LPAREN' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'RPAREN' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'SLASH' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'BSLASH' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'PRIME' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LCURLY' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'RCURLY' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'GLOBALLY' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'SCHEME' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'CLASS' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'TYPE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'VALUE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'AXIOM' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'END' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'ALL' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'EXISTS' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'EXACTLY_ONE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'TS' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'TR' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'WHERE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'VARIABLE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'INIT_CONSTRAINT' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'ARRAY' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'OF' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LTL_ASSERTION' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'DETERMINISTIC' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'NONDETERMINISTIC' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'IS' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'EQ' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LT' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'GT' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'GE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'MI' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'PL' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'GU' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'IM' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LAND' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'LOR' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'NEG' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'FALSE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'TRUE' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'CHAR' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'TEXT' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'INT' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'ID' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action 'error' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action '#' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
    action '$$' (explicit right 9994):   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr
  immediate action:   reduce named_rule --> 'NONDETERMINISTIC' typing_list 'IS' guarded_value_expr  gotos:state 67:  items:    named_rule -> guarded_value_expr . 
  actions:    action 'EOF' (noprec):   reduce named_rule --> guarded_value_expr
    action 'DOT' (noprec):   reduce named_rule --> guarded_value_expr
    action 'COMMA' (noprec):   reduce named_rule --> guarded_value_expr
    action 'COLON' (noprec):   reduce named_rule --> guarded_value_expr
    action 'BAR' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LBRACKET' (noprec):   reduce named_rule --> guarded_value_expr
    action 'RBRACKET' (noprec):   reduce named_rule --> guarded_value_expr
    action 'QUOTE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LPAREN' (noprec):   reduce named_rule --> guarded_value_expr
    action 'RPAREN' (noprec):   reduce named_rule --> guarded_value_expr
    action 'SLASH' (noprec):   reduce named_rule --> guarded_value_expr
    action 'BSLASH' (noprec):   reduce named_rule --> guarded_value_expr
    action 'PRIME' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LCURLY' (noprec):   reduce named_rule --> guarded_value_expr
    action 'RCURLY' (noprec):   reduce named_rule --> guarded_value_expr
    action 'GLOBALLY' (noprec):   reduce named_rule --> guarded_value_expr
    action 'SCHEME' (noprec):   reduce named_rule --> guarded_value_expr
    action 'CLASS' (noprec):   reduce named_rule --> guarded_value_expr
    action 'TYPE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'VALUE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'AXIOM' (noprec):   reduce named_rule --> guarded_value_expr
    action 'END' (noprec):   reduce named_rule --> guarded_value_expr
    action 'ALL' (noprec):   reduce named_rule --> guarded_value_expr
    action 'EXISTS' (noprec):   reduce named_rule --> guarded_value_expr
    action 'EXACTLY_ONE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'TS' (noprec):   reduce named_rule --> guarded_value_expr
    action 'TR' (noprec):   reduce named_rule --> guarded_value_expr
    action 'WHERE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'VARIABLE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce named_rule --> guarded_value_expr
    action 'ARRAY' (noprec):   reduce named_rule --> guarded_value_expr
    action 'OF' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LTL_ASSERTION' (noprec):   reduce named_rule --> guarded_value_expr
    action 'DETERMINISTIC' (noprec):   reduce named_rule --> guarded_value_expr
    action 'NONDETERMINISTIC' (noprec):   reduce named_rule --> guarded_value_expr
    action 'IS' (noprec):   reduce named_rule --> guarded_value_expr
    action 'EQ' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LT' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'GT' (noprec):   reduce named_rule --> guarded_value_expr
    action 'GE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'MI' (noprec):   reduce named_rule --> guarded_value_expr
    action 'PL' (noprec):   reduce named_rule --> guarded_value_expr
    action 'GU' (noprec):   reduce named_rule --> guarded_value_expr
    action 'IM' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LAND' (noprec):   reduce named_rule --> guarded_value_expr
    action 'LOR' (noprec):   reduce named_rule --> guarded_value_expr
    action 'NEG' (noprec):   reduce named_rule --> guarded_value_expr
    action 'FALSE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'TRUE' (noprec):   reduce named_rule --> guarded_value_expr
    action 'CHAR' (noprec):   reduce named_rule --> guarded_value_expr
    action 'TEXT' (noprec):   reduce named_rule --> guarded_value_expr
    action 'INT' (noprec):   reduce named_rule --> guarded_value_expr
    action 'ID' (noprec):   reduce named_rule --> guarded_value_expr
    action 'error' (noprec):   reduce named_rule --> guarded_value_expr
    action '#' (noprec):   reduce named_rule --> guarded_value_expr
    action '$$' (noprec):   reduce named_rule --> guarded_value_expr
  immediate action:   reduce named_rule --> guarded_value_expr  gotos:state 68:  items:    choice -> 'NONDETERMINISTIC' . 
  actions:    action 'EOF' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'DOT' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'COMMA' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'COLON' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'BAR' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LBRACKET' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'RBRACKET' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'QUOTE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LPAREN' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'RPAREN' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'SLASH' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'BSLASH' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'PRIME' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LCURLY' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'RCURLY' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'GLOBALLY' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'SCHEME' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'CLASS' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'TYPE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'VALUE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'AXIOM' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'END' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'ALL' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'EXISTS' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'EXACTLY_ONE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'TS' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'TR' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'WHERE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'VARIABLE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'INIT_CONSTRAINT' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'ARRAY' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'OF' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LTL_ASSERTION' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'DETERMINISTIC' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'NONDETERMINISTIC' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'IS' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'EQ' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LT' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'GT' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'GE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'MI' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'PL' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'GU' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'IM' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LAND' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'LOR' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'NEG' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'FALSE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'TRUE' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'CHAR' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'TEXT' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'INT' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'ID' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action 'error' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action '#' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
    action '$$' (explicit left 9993):   reduce choice --> 'NONDETERMINISTIC'
  immediate action:   reduce choice --> 'NONDETERMINISTIC'  gotos:state 69:  items:    choice -> 'DETERMINISTIC' . 
  actions:    action 'EOF' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'DOT' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'COMMA' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'COLON' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'BAR' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LBRACKET' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'RBRACKET' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'QUOTE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LPAREN' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'RPAREN' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'SLASH' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'BSLASH' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'PRIME' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LCURLY' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'RCURLY' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'GLOBALLY' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'SCHEME' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'CLASS' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'TYPE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'VALUE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'AXIOM' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'END' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'ALL' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'EXISTS' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'EXACTLY_ONE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'TS' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'TR' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'WHERE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'VARIABLE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'INIT_CONSTRAINT' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'ARRAY' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'OF' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LTL_ASSERTION' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'DETERMINISTIC' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'NONDETERMINISTIC' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'IS' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'EQ' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LT' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'GT' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'GE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'MI' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'PL' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'GU' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'IM' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LAND' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'LOR' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'NEG' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'FALSE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'TRUE' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'CHAR' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'TEXT' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'INT' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'ID' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action 'error' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action '#' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
    action '$$' (explicit left 9993):   reduce choice --> 'DETERMINISTIC'
  immediate action:   reduce choice --> 'DETERMINISTIC'  gotos:state 70:  items:    guarded_value_expr -> value_expression . 'GU' value_expressions
    value_expression -> 'LPAREN' value_expression . 'RPAREN'
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 109
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9995):   shift 72
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix_conn: 147
state 71:  items:    guarded_value_expr -> value_expression . 'GU' value_expressions
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9995):   shift 72
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix_conn: 147
state 72:  items:    guarded_value_expr -> value_expression 'GU' . value_expressions
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expressions: 73
    goto value_expression: 87
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 73:  items:    guarded_value_expr -> value_expression 'GU' value_expressions . 
    value_expressions -> value_expressions . 'COMMA' value_expression
  actions:    action 'EOF' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'DOT' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'COMMA' (noprec):   shift 91
    action 'COLON' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'BAR' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LBRACKET' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'RBRACKET' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'QUOTE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LPAREN' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'RPAREN' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'SLASH' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'BSLASH' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'PRIME' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LCURLY' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'RCURLY' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'GLOBALLY' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'SCHEME' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'CLASS' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'TYPE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'VALUE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'AXIOM' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'END' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'ALL' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'EXISTS' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'EXACTLY_ONE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'TS' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'TR' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'WHERE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'VARIABLE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'INIT_CONSTRAINT' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'ARRAY' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'OF' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LTL_ASSERTION' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'DETERMINISTIC' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'NONDETERMINISTIC' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'IS' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'EQ' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LT' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'GT' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'GE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'MI' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'PL' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'GU' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'IM' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LAND' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'LOR' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'NEG' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'FALSE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'TRUE' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'CHAR' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'TEXT' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'INT' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'ID' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action 'error' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action '#' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
    action '$$' (explicit left 9995):   reduce guarded_value_expr --> value_expression 'GU' value_expressions
  immediate action: <none>  gotos:state 74:  items:    variable_definitions -> variable_definition . 
  actions:    action 'EOF' (noprec):   reduce variable_definitions --> variable_definition
    action 'DOT' (noprec):   reduce variable_definitions --> variable_definition
    action 'COMMA' (noprec):   reduce variable_definitions --> variable_definition
    action 'COLON' (noprec):   reduce variable_definitions --> variable_definition
    action 'BAR' (noprec):   reduce variable_definitions --> variable_definition
    action 'LBRACKET' (noprec):   reduce variable_definitions --> variable_definition
    action 'RBRACKET' (noprec):   reduce variable_definitions --> variable_definition
    action 'QUOTE' (noprec):   reduce variable_definitions --> variable_definition
    action 'LPAREN' (noprec):   reduce variable_definitions --> variable_definition
    action 'RPAREN' (noprec):   reduce variable_definitions --> variable_definition
    action 'SLASH' (noprec):   reduce variable_definitions --> variable_definition
    action 'BSLASH' (noprec):   reduce variable_definitions --> variable_definition
    action 'PRIME' (noprec):   reduce variable_definitions --> variable_definition
    action 'LCURLY' (noprec):   reduce variable_definitions --> variable_definition
    action 'RCURLY' (noprec):   reduce variable_definitions --> variable_definition
    action 'GLOBALLY' (noprec):   reduce variable_definitions --> variable_definition
    action 'SCHEME' (noprec):   reduce variable_definitions --> variable_definition
    action 'CLASS' (noprec):   reduce variable_definitions --> variable_definition
    action 'TYPE' (noprec):   reduce variable_definitions --> variable_definition
    action 'VALUE' (noprec):   reduce variable_definitions --> variable_definition
    action 'AXIOM' (noprec):   reduce variable_definitions --> variable_definition
    action 'END' (noprec):   reduce variable_definitions --> variable_definition
    action 'ALL' (noprec):   reduce variable_definitions --> variable_definition
    action 'EXISTS' (noprec):   reduce variable_definitions --> variable_definition
    action 'EXACTLY_ONE' (noprec):   reduce variable_definitions --> variable_definition
    action 'TS' (noprec):   reduce variable_definitions --> variable_definition
    action 'TR' (noprec):   reduce variable_definitions --> variable_definition
    action 'WHERE' (noprec):   reduce variable_definitions --> variable_definition
    action 'VARIABLE' (noprec):   reduce variable_definitions --> variable_definition
    action 'INIT_CONSTRAINT' (noprec):   reduce variable_definitions --> variable_definition
    action 'ARRAY' (noprec):   reduce variable_definitions --> variable_definition
    action 'OF' (noprec):   reduce variable_definitions --> variable_definition
    action 'LTL_ASSERTION' (noprec):   reduce variable_definitions --> variable_definition
    action 'DETERMINISTIC' (noprec):   reduce variable_definitions --> variable_definition
    action 'NONDETERMINISTIC' (noprec):   reduce variable_definitions --> variable_definition
    action 'IS' (noprec):   reduce variable_definitions --> variable_definition
    action 'EQ' (noprec):   reduce variable_definitions --> variable_definition
    action 'LT' (noprec):   reduce variable_definitions --> variable_definition
    action 'LE' (noprec):   reduce variable_definitions --> variable_definition
    action 'GT' (noprec):   reduce variable_definitions --> variable_definition
    action 'GE' (noprec):   reduce variable_definitions --> variable_definition
    action 'MI' (noprec):   reduce variable_definitions --> variable_definition
    action 'PL' (noprec):   reduce variable_definitions --> variable_definition
    action 'GU' (noprec):   reduce variable_definitions --> variable_definition
    action 'IM' (noprec):   reduce variable_definitions --> variable_definition
    action 'LAND' (noprec):   reduce variable_definitions --> variable_definition
    action 'LOR' (noprec):   reduce variable_definitions --> variable_definition
    action 'NEG' (noprec):   reduce variable_definitions --> variable_definition
    action 'FALSE' (noprec):   reduce variable_definitions --> variable_definition
    action 'TRUE' (noprec):   reduce variable_definitions --> variable_definition
    action 'CHAR' (noprec):   reduce variable_definitions --> variable_definition
    action 'TEXT' (noprec):   reduce variable_definitions --> variable_definition
    action 'INT' (noprec):   reduce variable_definitions --> variable_definition
    action 'ID' (noprec):   reduce variable_definitions --> variable_definition
    action 'error' (noprec):   reduce variable_definitions --> variable_definition
    action '#' (noprec):   reduce variable_definitions --> variable_definition
    action '$$' (noprec):   reduce variable_definitions --> variable_definition
  immediate action:   reduce variable_definitions --> variable_definition  gotos:state 75:  items:    variable_definitions -> variable_definitions 'COMMA' . variable_definition
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto variable_definition: 76
    goto identifier: 77
state 76:  items:    variable_definitions -> variable_definitions 'COMMA' variable_definition . 
  actions:    action 'EOF' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'DOT' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'COMMA' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'COLON' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'BAR' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LBRACKET' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'RBRACKET' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'QUOTE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LPAREN' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'RPAREN' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'SLASH' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'BSLASH' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'PRIME' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LCURLY' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'RCURLY' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'GLOBALLY' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'SCHEME' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'CLASS' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'TYPE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'VALUE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'AXIOM' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'END' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'ALL' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'EXISTS' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'EXACTLY_ONE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'TS' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'TR' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'WHERE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'VARIABLE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'INIT_CONSTRAINT' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'ARRAY' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'OF' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LTL_ASSERTION' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'DETERMINISTIC' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'NONDETERMINISTIC' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'IS' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'EQ' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LT' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'GT' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'GE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'MI' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'PL' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'GU' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'IM' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LAND' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'LOR' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'NEG' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'FALSE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'TRUE' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'CHAR' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'TEXT' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'INT' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'ID' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action 'error' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action '#' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
    action '$$' (noprec):   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition
  immediate action:   reduce variable_definitions --> variable_definitions 'COMMA' variable_definition  gotos:state 77:  items:    variable_definition -> identifier . 'COLON' type_expr
    variable_definition -> identifier . 'COLON' type_expr 'COLON' 'EQ' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 78
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 78:  items:    variable_definition -> identifier 'COLON' . type_expr
    variable_definition -> identifier 'COLON' . type_expr 'COLON' 'EQ' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 189
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   shift 185
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 184
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_expr: 79
state 79:  items:    variable_definition -> identifier 'COLON' type_expr . 
    variable_definition -> identifier 'COLON' type_expr . 'COLON' 'EQ' value_expression
  actions:    action 'EOF' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'DOT' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'COMMA' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'COLON' (noprec):   shift 80
    action 'BAR' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LBRACKET' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'RBRACKET' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'QUOTE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LPAREN' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'RPAREN' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'SLASH' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'BSLASH' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'PRIME' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LCURLY' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'RCURLY' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'GLOBALLY' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'SCHEME' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'CLASS' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'TYPE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'VALUE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'AXIOM' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'END' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'ALL' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'EXISTS' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'EXACTLY_ONE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'TS' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'TR' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'WHERE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'VARIABLE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'ARRAY' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'OF' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LTL_ASSERTION' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'DETERMINISTIC' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'NONDETERMINISTIC' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'IS' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'EQ' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LT' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'GT' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'GE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'MI' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'PL' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'GU' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'IM' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LAND' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'LOR' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'NEG' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'FALSE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'TRUE' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'CHAR' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'TEXT' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'INT' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'ID' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action 'error' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action '#' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
    action '$$' (noprec):   reduce variable_definition --> identifier 'COLON' type_expr
  immediate action: <none>  gotos:state 80:  items:    variable_definition -> identifier 'COLON' type_expr 'COLON' . 'EQ' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 81
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 81:  items:    variable_definition -> identifier 'COLON' type_expr 'COLON' 'EQ' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 82
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 82:  items:    variable_definition -> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'DOT' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'COMMA' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'COLON' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'BAR' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'LBRACKET' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'RBRACKET' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'QUOTE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'LPAREN' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'RPAREN' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'SLASH' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'BSLASH' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'PRIME' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'LCURLY' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'RCURLY' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'GLOBALLY' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'SCHEME' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'CLASS' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'TYPE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'VALUE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'AXIOM' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'END' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'ALL' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'EXISTS' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'EXACTLY_ONE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'TS' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'TR' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'WHERE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'VARIABLE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'ARRAY' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'OF' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'LTL_ASSERTION' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'DETERMINISTIC' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'NONDETERMINISTIC' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'IS' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'TRUE' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'CHAR' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'TEXT' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'INT' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'ID' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action 'error' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action '#' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
    action '$$' (explicit right 9997):   reduce variable_definition --> identifier 'COLON' type_expr 'COLON' 'EQ' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 83:  items:    identifier -> 'TEXT' . 
    identifier -> 'TEXT' . 'LBRACKET' typing_list 'RBRACKET'
  actions:    action 'EOF' (noprec):   reduce identifier --> 'TEXT'
    action 'DOT' (noprec):   reduce identifier --> 'TEXT'
    action 'COMMA' (noprec):   reduce identifier --> 'TEXT'
    action 'COLON' (noprec):   reduce identifier --> 'TEXT'
    action 'BAR' (noprec):   reduce identifier --> 'TEXT'
    action 'LBRACKET' (noprec):   shift 84
    action 'RBRACKET' (noprec):   reduce identifier --> 'TEXT'
    action 'QUOTE' (noprec):   reduce identifier --> 'TEXT'
    action 'LPAREN' (noprec):   reduce identifier --> 'TEXT'
    action 'RPAREN' (noprec):   reduce identifier --> 'TEXT'
    action 'SLASH' (noprec):   reduce identifier --> 'TEXT'
    action 'BSLASH' (noprec):   reduce identifier --> 'TEXT'
    action 'PRIME' (noprec):   reduce identifier --> 'TEXT'
    action 'LCURLY' (noprec):   reduce identifier --> 'TEXT'
    action 'RCURLY' (noprec):   reduce identifier --> 'TEXT'
    action 'GLOBALLY' (noprec):   reduce identifier --> 'TEXT'
    action 'SCHEME' (noprec):   reduce identifier --> 'TEXT'
    action 'CLASS' (noprec):   reduce identifier --> 'TEXT'
    action 'TYPE' (noprec):   reduce identifier --> 'TEXT'
    action 'VALUE' (noprec):   reduce identifier --> 'TEXT'
    action 'AXIOM' (noprec):   reduce identifier --> 'TEXT'
    action 'END' (noprec):   reduce identifier --> 'TEXT'
    action 'ALL' (noprec):   reduce identifier --> 'TEXT'
    action 'EXISTS' (noprec):   reduce identifier --> 'TEXT'
    action 'EXACTLY_ONE' (noprec):   reduce identifier --> 'TEXT'
    action 'TS' (noprec):   reduce identifier --> 'TEXT'
    action 'TR' (noprec):   reduce identifier --> 'TEXT'
    action 'WHERE' (noprec):   reduce identifier --> 'TEXT'
    action 'VARIABLE' (noprec):   reduce identifier --> 'TEXT'
    action 'INIT_CONSTRAINT' (noprec):   reduce identifier --> 'TEXT'
    action 'ARRAY' (noprec):   reduce identifier --> 'TEXT'
    action 'OF' (noprec):   reduce identifier --> 'TEXT'
    action 'LTL_ASSERTION' (noprec):   reduce identifier --> 'TEXT'
    action 'DETERMINISTIC' (noprec):   reduce identifier --> 'TEXT'
    action 'NONDETERMINISTIC' (noprec):   reduce identifier --> 'TEXT'
    action 'IS' (noprec):   reduce identifier --> 'TEXT'
    action 'EQ' (noprec):   reduce identifier --> 'TEXT'
    action 'LT' (noprec):   reduce identifier --> 'TEXT'
    action 'LE' (noprec):   reduce identifier --> 'TEXT'
    action 'GT' (noprec):   reduce identifier --> 'TEXT'
    action 'GE' (noprec):   reduce identifier --> 'TEXT'
    action 'MI' (noprec):   reduce identifier --> 'TEXT'
    action 'PL' (noprec):   reduce identifier --> 'TEXT'
    action 'GU' (noprec):   reduce identifier --> 'TEXT'
    action 'IM' (noprec):   reduce identifier --> 'TEXT'
    action 'LAND' (noprec):   reduce identifier --> 'TEXT'
    action 'LOR' (noprec):   reduce identifier --> 'TEXT'
    action 'NEG' (noprec):   reduce identifier --> 'TEXT'
    action 'FALSE' (noprec):   reduce identifier --> 'TEXT'
    action 'TRUE' (noprec):   reduce identifier --> 'TEXT'
    action 'CHAR' (noprec):   reduce identifier --> 'TEXT'
    action 'TEXT' (noprec):   reduce identifier --> 'TEXT'
    action 'INT' (noprec):   reduce identifier --> 'TEXT'
    action 'ID' (noprec):   reduce identifier --> 'TEXT'
    action 'error' (noprec):   reduce identifier --> 'TEXT'
    action '#' (noprec):   reduce identifier --> 'TEXT'
    action '$$' (noprec):   reduce identifier --> 'TEXT'
  immediate action: <none>  gotos:state 84:  items:    identifier -> 'TEXT' 'LBRACKET' . typing_list 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto identifier: 163
    goto typing: 167
    goto typing_list: 85
    goto rev_typing_list: 166
state 85:  items:    identifier -> 'TEXT' 'LBRACKET' typing_list . 'RBRACKET'
    rev_typing_list -> typing_list . 'COMMA' typing
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   shift 168
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 86
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 86:  items:    identifier -> 'TEXT' 'LBRACKET' typing_list 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'DOT' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'COMMA' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'COLON' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'BAR' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'QUOTE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LPAREN' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'RPAREN' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'SLASH' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'BSLASH' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'PRIME' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LCURLY' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'RCURLY' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'GLOBALLY' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'SCHEME' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'CLASS' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'TYPE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'VALUE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'AXIOM' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'END' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'ALL' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'EXISTS' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'EXACTLY_ONE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'TS' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'TR' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'WHERE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'VARIABLE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'INIT_CONSTRAINT' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'ARRAY' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'OF' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LTL_ASSERTION' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'DETERMINISTIC' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'NONDETERMINISTIC' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'IS' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'EQ' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LT' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'GT' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'GE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'MI' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'PL' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'GU' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'IM' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LAND' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'LOR' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'NEG' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'FALSE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'TRUE' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'CHAR' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'TEXT' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'INT' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'ID' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action 'error' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action '#' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
    action '$$' (noprec):   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'
  immediate action:   reduce identifier --> 'TEXT' 'LBRACKET' typing_list 'RBRACKET'  gotos:state 87:  items:    value_expressions -> value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   reduce value_expressions --> value_expression
    action 'DOT' (noprec):   reduce value_expressions --> value_expression
    action 'COMMA' (noprec):   reduce value_expressions --> value_expression
    action 'COLON' (noprec):   reduce value_expressions --> value_expression
    action 'BAR' (noprec):   reduce value_expressions --> value_expression
    action 'LBRACKET' (noprec):   reduce value_expressions --> value_expression
    action 'RBRACKET' (noprec):   reduce value_expressions --> value_expression
    action 'QUOTE' (noprec):   reduce value_expressions --> value_expression
    action 'LPAREN' (noprec):   reduce value_expressions --> value_expression
    action 'RPAREN' (noprec):   reduce value_expressions --> value_expression
    action 'SLASH' (noprec):   reduce value_expressions --> value_expression
    action 'BSLASH' (noprec):   reduce value_expressions --> value_expression
    action 'PRIME' (noprec):   reduce value_expressions --> value_expression
    action 'LCURLY' (noprec):   reduce value_expressions --> value_expression
    action 'RCURLY' (noprec):   reduce value_expressions --> value_expression
    action 'GLOBALLY' (noprec):   reduce value_expressions --> value_expression
    action 'SCHEME' (noprec):   reduce value_expressions --> value_expression
    action 'CLASS' (noprec):   reduce value_expressions --> value_expression
    action 'TYPE' (noprec):   reduce value_expressions --> value_expression
    action 'VALUE' (noprec):   reduce value_expressions --> value_expression
    action 'AXIOM' (noprec):   reduce value_expressions --> value_expression
    action 'END' (noprec):   reduce value_expressions --> value_expression
    action 'ALL' (noprec):   reduce value_expressions --> value_expression
    action 'EXISTS' (noprec):   reduce value_expressions --> value_expression
    action 'EXACTLY_ONE' (noprec):   reduce value_expressions --> value_expression
    action 'TS' (noprec):   reduce value_expressions --> value_expression
    action 'TR' (noprec):   reduce value_expressions --> value_expression
    action 'WHERE' (noprec):   reduce value_expressions --> value_expression
    action 'VARIABLE' (noprec):   reduce value_expressions --> value_expression
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expressions --> value_expression
    action 'ARRAY' (noprec):   reduce value_expressions --> value_expression
    action 'OF' (noprec):   reduce value_expressions --> value_expression
    action 'LTL_ASSERTION' (noprec):   reduce value_expressions --> value_expression
    action 'DETERMINISTIC' (noprec):   reduce value_expressions --> value_expression
    action 'NONDETERMINISTIC' (noprec):   reduce value_expressions --> value_expression
    action 'IS' (noprec):   reduce value_expressions --> value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   reduce value_expressions --> value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   reduce value_expressions --> value_expression
    action 'TRUE' (noprec):   reduce value_expressions --> value_expression
    action 'CHAR' (noprec):   reduce value_expressions --> value_expression
    action 'TEXT' (noprec):   reduce value_expressions --> value_expression
    action 'INT' (noprec):   reduce value_expressions --> value_expression
    action 'ID' (noprec):   reduce value_expressions --> value_expression
    action 'error' (noprec):   reduce value_expressions --> value_expression
    action '#' (noprec):   reduce value_expressions --> value_expression
    action '$$' (noprec):   reduce value_expressions --> value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 88:  items:    value_expressions -> value_expressions . 'COMMA' value_expression
    value_expression -> 'LCURLY' 'DOT' value_expressions . 'DOT' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   shift 114
    action 'COMMA' (noprec):   shift 91
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 89:  items:    value_expressions -> value_expressions . 'COMMA' value_expression
    accessor -> 'TEXT' 'LBRACKET' value_expressions . 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   shift 91
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 124
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 90:  items:    value_expressions -> value_expressions . 'COMMA' value_expression
    accessor -> 'TEXT' 'PRIME' 'LBRACKET' value_expressions . 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   shift 91
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 126
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 91:  items:    value_expressions -> value_expressions 'COMMA' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 92
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 92:  items:    value_expressions -> value_expressions 'COMMA' value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'DOT' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'COMMA' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'COLON' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'BAR' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'LBRACKET' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'RBRACKET' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'QUOTE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'LPAREN' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'RPAREN' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'SLASH' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'BSLASH' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'PRIME' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'LCURLY' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'RCURLY' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'GLOBALLY' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'SCHEME' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'CLASS' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'TYPE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'VALUE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'AXIOM' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'END' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'ALL' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'EXISTS' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'EXACTLY_ONE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'TS' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'TR' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'WHERE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'VARIABLE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'ARRAY' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'OF' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'LTL_ASSERTION' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'DETERMINISTIC' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'NONDETERMINISTIC' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'IS' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'TRUE' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'CHAR' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'TEXT' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'INT' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'ID' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action 'error' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action '#' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
    action '$$' (noprec):   reduce value_expressions --> value_expressions 'COMMA' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 93:  items:    value_expression -> 'TRUE' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'TRUE'
    action 'DOT' (noprec):   reduce value_expression --> 'TRUE'
    action 'COMMA' (noprec):   reduce value_expression --> 'TRUE'
    action 'COLON' (noprec):   reduce value_expression --> 'TRUE'
    action 'BAR' (noprec):   reduce value_expression --> 'TRUE'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'TRUE'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'TRUE'
    action 'QUOTE' (noprec):   reduce value_expression --> 'TRUE'
    action 'LPAREN' (noprec):   reduce value_expression --> 'TRUE'
    action 'RPAREN' (noprec):   reduce value_expression --> 'TRUE'
    action 'SLASH' (noprec):   reduce value_expression --> 'TRUE'
    action 'BSLASH' (noprec):   reduce value_expression --> 'TRUE'
    action 'PRIME' (noprec):   reduce value_expression --> 'TRUE'
    action 'LCURLY' (noprec):   reduce value_expression --> 'TRUE'
    action 'RCURLY' (noprec):   reduce value_expression --> 'TRUE'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'TRUE'
    action 'SCHEME' (noprec):   reduce value_expression --> 'TRUE'
    action 'CLASS' (noprec):   reduce value_expression --> 'TRUE'
    action 'TYPE' (noprec):   reduce value_expression --> 'TRUE'
    action 'VALUE' (noprec):   reduce value_expression --> 'TRUE'
    action 'AXIOM' (noprec):   reduce value_expression --> 'TRUE'
    action 'END' (noprec):   reduce value_expression --> 'TRUE'
    action 'ALL' (noprec):   reduce value_expression --> 'TRUE'
    action 'EXISTS' (noprec):   reduce value_expression --> 'TRUE'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'TRUE'
    action 'TS' (noprec):   reduce value_expression --> 'TRUE'
    action 'TR' (noprec):   reduce value_expression --> 'TRUE'
    action 'WHERE' (noprec):   reduce value_expression --> 'TRUE'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'TRUE'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'TRUE'
    action 'ARRAY' (noprec):   reduce value_expression --> 'TRUE'
    action 'OF' (noprec):   reduce value_expression --> 'TRUE'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'TRUE'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'TRUE'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'TRUE'
    action 'IS' (noprec):   reduce value_expression --> 'TRUE'
    action 'EQ' (noprec):   reduce value_expression --> 'TRUE'
    action 'LT' (noprec):   reduce value_expression --> 'TRUE'
    action 'LE' (noprec):   reduce value_expression --> 'TRUE'
    action 'GT' (noprec):   reduce value_expression --> 'TRUE'
    action 'GE' (noprec):   reduce value_expression --> 'TRUE'
    action 'MI' (noprec):   reduce value_expression --> 'TRUE'
    action 'PL' (noprec):   reduce value_expression --> 'TRUE'
    action 'GU' (noprec):   reduce value_expression --> 'TRUE'
    action 'IM' (noprec):   reduce value_expression --> 'TRUE'
    action 'LAND' (noprec):   reduce value_expression --> 'TRUE'
    action 'LOR' (noprec):   reduce value_expression --> 'TRUE'
    action 'NEG' (noprec):   reduce value_expression --> 'TRUE'
    action 'FALSE' (noprec):   reduce value_expression --> 'TRUE'
    action 'TRUE' (noprec):   reduce value_expression --> 'TRUE'
    action 'CHAR' (noprec):   reduce value_expression --> 'TRUE'
    action 'TEXT' (noprec):   reduce value_expression --> 'TRUE'
    action 'INT' (noprec):   reduce value_expression --> 'TRUE'
    action 'ID' (noprec):   reduce value_expression --> 'TRUE'
    action 'error' (noprec):   reduce value_expression --> 'TRUE'
    action '#' (noprec):   reduce value_expression --> 'TRUE'
    action '$$' (noprec):   reduce value_expression --> 'TRUE'
  immediate action:   reduce value_expression --> 'TRUE'  gotos:state 94:  items:    value_expression -> 'FALSE' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'FALSE'
    action 'DOT' (noprec):   reduce value_expression --> 'FALSE'
    action 'COMMA' (noprec):   reduce value_expression --> 'FALSE'
    action 'COLON' (noprec):   reduce value_expression --> 'FALSE'
    action 'BAR' (noprec):   reduce value_expression --> 'FALSE'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'FALSE'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'FALSE'
    action 'QUOTE' (noprec):   reduce value_expression --> 'FALSE'
    action 'LPAREN' (noprec):   reduce value_expression --> 'FALSE'
    action 'RPAREN' (noprec):   reduce value_expression --> 'FALSE'
    action 'SLASH' (noprec):   reduce value_expression --> 'FALSE'
    action 'BSLASH' (noprec):   reduce value_expression --> 'FALSE'
    action 'PRIME' (noprec):   reduce value_expression --> 'FALSE'
    action 'LCURLY' (noprec):   reduce value_expression --> 'FALSE'
    action 'RCURLY' (noprec):   reduce value_expression --> 'FALSE'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'FALSE'
    action 'SCHEME' (noprec):   reduce value_expression --> 'FALSE'
    action 'CLASS' (noprec):   reduce value_expression --> 'FALSE'
    action 'TYPE' (noprec):   reduce value_expression --> 'FALSE'
    action 'VALUE' (noprec):   reduce value_expression --> 'FALSE'
    action 'AXIOM' (noprec):   reduce value_expression --> 'FALSE'
    action 'END' (noprec):   reduce value_expression --> 'FALSE'
    action 'ALL' (noprec):   reduce value_expression --> 'FALSE'
    action 'EXISTS' (noprec):   reduce value_expression --> 'FALSE'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'FALSE'
    action 'TS' (noprec):   reduce value_expression --> 'FALSE'
    action 'TR' (noprec):   reduce value_expression --> 'FALSE'
    action 'WHERE' (noprec):   reduce value_expression --> 'FALSE'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'FALSE'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'FALSE'
    action 'ARRAY' (noprec):   reduce value_expression --> 'FALSE'
    action 'OF' (noprec):   reduce value_expression --> 'FALSE'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'FALSE'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'FALSE'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'FALSE'
    action 'IS' (noprec):   reduce value_expression --> 'FALSE'
    action 'EQ' (noprec):   reduce value_expression --> 'FALSE'
    action 'LT' (noprec):   reduce value_expression --> 'FALSE'
    action 'LE' (noprec):   reduce value_expression --> 'FALSE'
    action 'GT' (noprec):   reduce value_expression --> 'FALSE'
    action 'GE' (noprec):   reduce value_expression --> 'FALSE'
    action 'MI' (noprec):   reduce value_expression --> 'FALSE'
    action 'PL' (noprec):   reduce value_expression --> 'FALSE'
    action 'GU' (noprec):   reduce value_expression --> 'FALSE'
    action 'IM' (noprec):   reduce value_expression --> 'FALSE'
    action 'LAND' (noprec):   reduce value_expression --> 'FALSE'
    action 'LOR' (noprec):   reduce value_expression --> 'FALSE'
    action 'NEG' (noprec):   reduce value_expression --> 'FALSE'
    action 'FALSE' (noprec):   reduce value_expression --> 'FALSE'
    action 'TRUE' (noprec):   reduce value_expression --> 'FALSE'
    action 'CHAR' (noprec):   reduce value_expression --> 'FALSE'
    action 'TEXT' (noprec):   reduce value_expression --> 'FALSE'
    action 'INT' (noprec):   reduce value_expression --> 'FALSE'
    action 'ID' (noprec):   reduce value_expression --> 'FALSE'
    action 'error' (noprec):   reduce value_expression --> 'FALSE'
    action '#' (noprec):   reduce value_expression --> 'FALSE'
    action '$$' (noprec):   reduce value_expression --> 'FALSE'
  immediate action:   reduce value_expression --> 'FALSE'  gotos:state 95:  items:    value_expression -> 'INT' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'INT'
    action 'DOT' (noprec):   reduce value_expression --> 'INT'
    action 'COMMA' (noprec):   reduce value_expression --> 'INT'
    action 'COLON' (noprec):   reduce value_expression --> 'INT'
    action 'BAR' (noprec):   reduce value_expression --> 'INT'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'INT'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'INT'
    action 'QUOTE' (noprec):   reduce value_expression --> 'INT'
    action 'LPAREN' (noprec):   reduce value_expression --> 'INT'
    action 'RPAREN' (noprec):   reduce value_expression --> 'INT'
    action 'SLASH' (noprec):   reduce value_expression --> 'INT'
    action 'BSLASH' (noprec):   reduce value_expression --> 'INT'
    action 'PRIME' (noprec):   reduce value_expression --> 'INT'
    action 'LCURLY' (noprec):   reduce value_expression --> 'INT'
    action 'RCURLY' (noprec):   reduce value_expression --> 'INT'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'INT'
    action 'SCHEME' (noprec):   reduce value_expression --> 'INT'
    action 'CLASS' (noprec):   reduce value_expression --> 'INT'
    action 'TYPE' (noprec):   reduce value_expression --> 'INT'
    action 'VALUE' (noprec):   reduce value_expression --> 'INT'
    action 'AXIOM' (noprec):   reduce value_expression --> 'INT'
    action 'END' (noprec):   reduce value_expression --> 'INT'
    action 'ALL' (noprec):   reduce value_expression --> 'INT'
    action 'EXISTS' (noprec):   reduce value_expression --> 'INT'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'INT'
    action 'TS' (noprec):   reduce value_expression --> 'INT'
    action 'TR' (noprec):   reduce value_expression --> 'INT'
    action 'WHERE' (noprec):   reduce value_expression --> 'INT'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'INT'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'INT'
    action 'ARRAY' (noprec):   reduce value_expression --> 'INT'
    action 'OF' (noprec):   reduce value_expression --> 'INT'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'INT'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'INT'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'INT'
    action 'IS' (noprec):   reduce value_expression --> 'INT'
    action 'EQ' (noprec):   reduce value_expression --> 'INT'
    action 'LT' (noprec):   reduce value_expression --> 'INT'
    action 'LE' (noprec):   reduce value_expression --> 'INT'
    action 'GT' (noprec):   reduce value_expression --> 'INT'
    action 'GE' (noprec):   reduce value_expression --> 'INT'
    action 'MI' (noprec):   reduce value_expression --> 'INT'
    action 'PL' (noprec):   reduce value_expression --> 'INT'
    action 'GU' (noprec):   reduce value_expression --> 'INT'
    action 'IM' (noprec):   reduce value_expression --> 'INT'
    action 'LAND' (noprec):   reduce value_expression --> 'INT'
    action 'LOR' (noprec):   reduce value_expression --> 'INT'
    action 'NEG' (noprec):   reduce value_expression --> 'INT'
    action 'FALSE' (noprec):   reduce value_expression --> 'INT'
    action 'TRUE' (noprec):   reduce value_expression --> 'INT'
    action 'CHAR' (noprec):   reduce value_expression --> 'INT'
    action 'TEXT' (noprec):   reduce value_expression --> 'INT'
    action 'INT' (noprec):   reduce value_expression --> 'INT'
    action 'ID' (noprec):   reduce value_expression --> 'INT'
    action 'error' (noprec):   reduce value_expression --> 'INT'
    action '#' (noprec):   reduce value_expression --> 'INT'
    action '$$' (noprec):   reduce value_expression --> 'INT'
  immediate action:   reduce value_expression --> 'INT'  gotos:state 96:  items:    value_expression -> 'QUOTE' . 'TEXT' 'QUOTE'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 97
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 97:  items:    value_expression -> 'QUOTE' 'TEXT' . 'QUOTE'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 98
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 98:  items:    value_expression -> 'QUOTE' 'TEXT' 'QUOTE' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'DOT' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'COMMA' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'COLON' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'BAR' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'QUOTE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LPAREN' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'RPAREN' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'SLASH' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'BSLASH' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'PRIME' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LCURLY' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'RCURLY' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'SCHEME' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'CLASS' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'TYPE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'VALUE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'AXIOM' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'END' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'ALL' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'EXISTS' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'TS' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'TR' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'WHERE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'ARRAY' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'OF' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'IS' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'EQ' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LT' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'GT' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'GE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'MI' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'PL' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'GU' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'IM' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LAND' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'LOR' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'NEG' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'FALSE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'TRUE' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'CHAR' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'TEXT' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'INT' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'ID' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action 'error' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action '#' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
    action '$$' (noprec):   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'
  immediate action:   reduce value_expression --> 'QUOTE' 'TEXT' 'QUOTE'  gotos:state 99:  items:    value_expression -> accessor . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> accessor
    action 'DOT' (noprec):   reduce value_expression --> accessor
    action 'COMMA' (noprec):   reduce value_expression --> accessor
    action 'COLON' (noprec):   reduce value_expression --> accessor
    action 'BAR' (noprec):   reduce value_expression --> accessor
    action 'LBRACKET' (noprec):   reduce value_expression --> accessor
    action 'RBRACKET' (noprec):   reduce value_expression --> accessor
    action 'QUOTE' (noprec):   reduce value_expression --> accessor
    action 'LPAREN' (noprec):   reduce value_expression --> accessor
    action 'RPAREN' (noprec):   reduce value_expression --> accessor
    action 'SLASH' (noprec):   reduce value_expression --> accessor
    action 'BSLASH' (noprec):   reduce value_expression --> accessor
    action 'PRIME' (noprec):   reduce value_expression --> accessor
    action 'LCURLY' (noprec):   reduce value_expression --> accessor
    action 'RCURLY' (noprec):   reduce value_expression --> accessor
    action 'GLOBALLY' (noprec):   reduce value_expression --> accessor
    action 'SCHEME' (noprec):   reduce value_expression --> accessor
    action 'CLASS' (noprec):   reduce value_expression --> accessor
    action 'TYPE' (noprec):   reduce value_expression --> accessor
    action 'VALUE' (noprec):   reduce value_expression --> accessor
    action 'AXIOM' (noprec):   reduce value_expression --> accessor
    action 'END' (noprec):   reduce value_expression --> accessor
    action 'ALL' (noprec):   reduce value_expression --> accessor
    action 'EXISTS' (noprec):   reduce value_expression --> accessor
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> accessor
    action 'TS' (noprec):   reduce value_expression --> accessor
    action 'TR' (noprec):   reduce value_expression --> accessor
    action 'WHERE' (noprec):   reduce value_expression --> accessor
    action 'VARIABLE' (noprec):   reduce value_expression --> accessor
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> accessor
    action 'ARRAY' (noprec):   reduce value_expression --> accessor
    action 'OF' (noprec):   reduce value_expression --> accessor
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> accessor
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> accessor
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> accessor
    action 'IS' (noprec):   reduce value_expression --> accessor
    action 'EQ' (noprec):   reduce value_expression --> accessor
    action 'LT' (noprec):   reduce value_expression --> accessor
    action 'LE' (noprec):   reduce value_expression --> accessor
    action 'GT' (noprec):   reduce value_expression --> accessor
    action 'GE' (noprec):   reduce value_expression --> accessor
    action 'MI' (noprec):   reduce value_expression --> accessor
    action 'PL' (noprec):   reduce value_expression --> accessor
    action 'GU' (noprec):   reduce value_expression --> accessor
    action 'IM' (noprec):   reduce value_expression --> accessor
    action 'LAND' (noprec):   reduce value_expression --> accessor
    action 'LOR' (noprec):   reduce value_expression --> accessor
    action 'NEG' (noprec):   reduce value_expression --> accessor
    action 'FALSE' (noprec):   reduce value_expression --> accessor
    action 'TRUE' (noprec):   reduce value_expression --> accessor
    action 'CHAR' (noprec):   reduce value_expression --> accessor
    action 'TEXT' (noprec):   reduce value_expression --> accessor
    action 'INT' (noprec):   reduce value_expression --> accessor
    action 'ID' (noprec):   reduce value_expression --> accessor
    action 'error' (noprec):   reduce value_expression --> accessor
    action '#' (noprec):   reduce value_expression --> accessor
    action '$$' (noprec):   reduce value_expression --> accessor
  immediate action:   reduce value_expression --> accessor  gotos:state 100:  items:    value_expression -> 'LBRACKET' . 'TEXT' 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 101
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 101:  items:    value_expression -> 'LBRACKET' 'TEXT' . 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   shift 102
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 102:  items:    value_expression -> 'LBRACKET' 'TEXT' 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'DOT' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'COMMA' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'COLON' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'BAR' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'QUOTE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LPAREN' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'RPAREN' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'SLASH' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'BSLASH' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'PRIME' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LCURLY' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'RCURLY' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'SCHEME' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'CLASS' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'TYPE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'VALUE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'AXIOM' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'END' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'ALL' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'EXISTS' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'TS' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'TR' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'WHERE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'ARRAY' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'OF' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'IS' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'EQ' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LT' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'GT' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'GE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'MI' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'PL' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'GU' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'IM' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LAND' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'LOR' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'NEG' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'FALSE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'TRUE' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'CHAR' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'TEXT' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'INT' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'ID' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action 'error' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action '#' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
    action '$$' (noprec):   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'
  immediate action:   reduce value_expression --> 'LBRACKET' 'TEXT' 'RBRACKET'  gotos:state 103:  items:    value_expression -> quantifier . typing_list 'IS' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto identifier: 163
    goto typing: 167
    goto typing_list: 104
    goto rev_typing_list: 166
state 104:  items:    value_expression -> quantifier typing_list . 'IS' value_expression
    rev_typing_list -> typing_list . 'COMMA' typing
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   shift 168
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (explicit right 9994):   shift 105
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 105:  items:    value_expression -> quantifier typing_list 'IS' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 106
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 106:  items:    value_expression -> quantifier typing_list 'IS' value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'DOT' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'COMMA' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'COLON' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'BAR' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'LBRACKET' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'RBRACKET' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'QUOTE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'LPAREN' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'RPAREN' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'SLASH' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'BSLASH' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'PRIME' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'LCURLY' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'RCURLY' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'GLOBALLY' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'SCHEME' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'CLASS' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'TYPE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'VALUE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'AXIOM' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'END' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'ALL' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'EXISTS' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'EXACTLY_ONE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'TS' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'TR' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'WHERE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'VARIABLE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'INIT_CONSTRAINT' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'ARRAY' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'OF' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'LTL_ASSERTION' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'DETERMINISTIC' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'NONDETERMINISTIC' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'IS' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'TRUE' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'CHAR' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'TEXT' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'INT' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'ID' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action 'error' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action '#' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
    action '$$' (explicit right 9994):   reduce value_expression --> quantifier typing_list 'IS' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 107:  items:    value_expression -> 'LPAREN' . value_expression 'RPAREN'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 108
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 108:  items:    value_expression -> 'LPAREN' value_expression . 'RPAREN'
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   shift 109
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   error
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix_conn: 147
state 109:  items:    value_expression -> 'LPAREN' value_expression 'RPAREN' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'DOT' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'COMMA' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'COLON' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'BAR' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'QUOTE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LPAREN' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'RPAREN' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'SLASH' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'BSLASH' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'PRIME' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LCURLY' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'RCURLY' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'SCHEME' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'CLASS' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'TYPE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'VALUE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'AXIOM' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'END' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'ALL' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'EXISTS' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'TS' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'TR' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'WHERE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'ARRAY' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'OF' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'IS' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'EQ' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LT' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'GT' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'GE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'MI' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'PL' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'GU' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'IM' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LAND' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'LOR' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'NEG' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'FALSE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'TRUE' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'CHAR' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'TEXT' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'INT' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'ID' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action 'error' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action '#' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
    action '$$' (noprec):   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'
  immediate action:   reduce value_expression --> 'LPAREN' value_expression 'RPAREN'  gotos:state 110:  items:    value_expression -> axiom_infix_expr . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'DOT' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'COMMA' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'COLON' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'BAR' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LBRACKET' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'RBRACKET' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'QUOTE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LPAREN' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'RPAREN' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'SLASH' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'BSLASH' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'PRIME' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LCURLY' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'RCURLY' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'GLOBALLY' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'SCHEME' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'CLASS' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'TYPE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'VALUE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'AXIOM' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'END' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'ALL' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'EXISTS' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'TS' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'TR' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'WHERE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'VARIABLE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'ARRAY' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'OF' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'IS' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'EQ' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LT' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'GT' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'GE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'MI' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'PL' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'GU' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'IM' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LAND' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'LOR' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'NEG' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'FALSE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'TRUE' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'CHAR' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'TEXT' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'INT' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'ID' (noprec):   reduce value_expression --> axiom_infix_expr
    action 'error' (noprec):   reduce value_expression --> axiom_infix_expr
    action '#' (noprec):   reduce value_expression --> axiom_infix_expr
    action '$$' (noprec):   reduce value_expression --> axiom_infix_expr
  immediate action:   reduce value_expression --> axiom_infix_expr  gotos:state 111:  items:    value_expression -> infix_expr . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> infix_expr
    action 'DOT' (noprec):   reduce value_expression --> infix_expr
    action 'COMMA' (noprec):   reduce value_expression --> infix_expr
    action 'COLON' (noprec):   reduce value_expression --> infix_expr
    action 'BAR' (noprec):   reduce value_expression --> infix_expr
    action 'LBRACKET' (noprec):   reduce value_expression --> infix_expr
    action 'RBRACKET' (noprec):   reduce value_expression --> infix_expr
    action 'QUOTE' (noprec):   reduce value_expression --> infix_expr
    action 'LPAREN' (noprec):   reduce value_expression --> infix_expr
    action 'RPAREN' (noprec):   reduce value_expression --> infix_expr
    action 'SLASH' (noprec):   reduce value_expression --> infix_expr
    action 'BSLASH' (noprec):   reduce value_expression --> infix_expr
    action 'PRIME' (noprec):   reduce value_expression --> infix_expr
    action 'LCURLY' (noprec):   reduce value_expression --> infix_expr
    action 'RCURLY' (noprec):   reduce value_expression --> infix_expr
    action 'GLOBALLY' (noprec):   reduce value_expression --> infix_expr
    action 'SCHEME' (noprec):   reduce value_expression --> infix_expr
    action 'CLASS' (noprec):   reduce value_expression --> infix_expr
    action 'TYPE' (noprec):   reduce value_expression --> infix_expr
    action 'VALUE' (noprec):   reduce value_expression --> infix_expr
    action 'AXIOM' (noprec):   reduce value_expression --> infix_expr
    action 'END' (noprec):   reduce value_expression --> infix_expr
    action 'ALL' (noprec):   reduce value_expression --> infix_expr
    action 'EXISTS' (noprec):   reduce value_expression --> infix_expr
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> infix_expr
    action 'TS' (noprec):   reduce value_expression --> infix_expr
    action 'TR' (noprec):   reduce value_expression --> infix_expr
    action 'WHERE' (noprec):   reduce value_expression --> infix_expr
    action 'VARIABLE' (noprec):   reduce value_expression --> infix_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> infix_expr
    action 'ARRAY' (noprec):   reduce value_expression --> infix_expr
    action 'OF' (noprec):   reduce value_expression --> infix_expr
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> infix_expr
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> infix_expr
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> infix_expr
    action 'IS' (noprec):   reduce value_expression --> infix_expr
    action 'EQ' (noprec):   reduce value_expression --> infix_expr
    action 'LT' (noprec):   reduce value_expression --> infix_expr
    action 'LE' (noprec):   reduce value_expression --> infix_expr
    action 'GT' (noprec):   reduce value_expression --> infix_expr
    action 'GE' (noprec):   reduce value_expression --> infix_expr
    action 'MI' (noprec):   reduce value_expression --> infix_expr
    action 'PL' (noprec):   reduce value_expression --> infix_expr
    action 'GU' (noprec):   reduce value_expression --> infix_expr
    action 'IM' (noprec):   reduce value_expression --> infix_expr
    action 'LAND' (noprec):   reduce value_expression --> infix_expr
    action 'LOR' (noprec):   reduce value_expression --> infix_expr
    action 'NEG' (noprec):   reduce value_expression --> infix_expr
    action 'FALSE' (noprec):   reduce value_expression --> infix_expr
    action 'TRUE' (noprec):   reduce value_expression --> infix_expr
    action 'CHAR' (noprec):   reduce value_expression --> infix_expr
    action 'TEXT' (noprec):   reduce value_expression --> infix_expr
    action 'INT' (noprec):   reduce value_expression --> infix_expr
    action 'ID' (noprec):   reduce value_expression --> infix_expr
    action 'error' (noprec):   reduce value_expression --> infix_expr
    action '#' (noprec):   reduce value_expression --> infix_expr
    action '$$' (noprec):   reduce value_expression --> infix_expr
  immediate action:   reduce value_expression --> infix_expr  gotos:state 112:  items:    value_expression -> 'LCURLY' . 'DOT' value_expressions 'DOT' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   shift 113
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 113:  items:    value_expression -> 'LCURLY' 'DOT' . value_expressions 'DOT' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expressions: 88
    goto value_expression: 87
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 114:  items:    value_expression -> 'LCURLY' 'DOT' value_expressions 'DOT' . 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   shift 115
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 115:  items:    value_expression -> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY' . 
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'DOT' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'COMMA' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'COLON' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'BAR' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LBRACKET' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'RBRACKET' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'QUOTE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LPAREN' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'RPAREN' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'SLASH' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'BSLASH' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'PRIME' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LCURLY' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'RCURLY' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'SCHEME' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'CLASS' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'TYPE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'VALUE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'AXIOM' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'END' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'ALL' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'EXISTS' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'TS' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'TR' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'WHERE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'VARIABLE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'ARRAY' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'OF' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'IS' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'EQ' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LT' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'GT' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'GE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'MI' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'PL' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'GU' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'IM' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LAND' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'LOR' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'NEG' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'FALSE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'TRUE' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'CHAR' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'TEXT' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'INT' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'ID' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action 'error' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action '#' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
    action '$$' (noprec):   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'
  immediate action:   reduce value_expression --> 'LCURLY' 'DOT' value_expressions 'DOT' 'RCURLY'  gotos:state 116:  items:    value_expression -> 'NEG' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 117
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 117:  items:    value_expression -> 'NEG' value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'DOT' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'COMMA' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'COLON' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'BAR' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'LBRACKET' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'RBRACKET' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'QUOTE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'LPAREN' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'RPAREN' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'SLASH' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'BSLASH' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'PRIME' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'LCURLY' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'RCURLY' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'GLOBALLY' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'SCHEME' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'CLASS' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'TYPE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'VALUE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'AXIOM' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'END' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'ALL' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'EXISTS' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'TS' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'TR' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'WHERE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'VARIABLE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'ARRAY' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'OF' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'IS' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'TRUE' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'CHAR' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'TEXT' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'INT' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'ID' (noprec):   reduce value_expression --> 'NEG' value_expression
    action 'error' (noprec):   reduce value_expression --> 'NEG' value_expression
    action '#' (noprec):   reduce value_expression --> 'NEG' value_expression
    action '$$' (noprec):   reduce value_expression --> 'NEG' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 118:  items:    value_expression -> temporal_modal_operators . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 119
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 119:  items:    value_expression -> temporal_modal_operators value_expression . 
    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'DOT' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'COMMA' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'COLON' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'BAR' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'LBRACKET' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'RBRACKET' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'QUOTE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'LPAREN' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'RPAREN' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'SLASH' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'BSLASH' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'PRIME' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'LCURLY' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'RCURLY' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'GLOBALLY' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'SCHEME' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'CLASS' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'TYPE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'VALUE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'AXIOM' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'END' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'ALL' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'EXISTS' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'EXACTLY_ONE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'TS' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'TR' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'WHERE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'VARIABLE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'INIT_CONSTRAINT' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'ARRAY' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'OF' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'LTL_ASSERTION' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'DETERMINISTIC' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'NONDETERMINISTIC' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'IS' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'TRUE' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'CHAR' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'TEXT' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'INT' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'ID' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action 'error' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action '#' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
    action '$$' (noprec):   reduce value_expression --> temporal_modal_operators value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 120:  items:    temporal_modal_operators -> 'GLOBALLY' . 
  actions:    action 'EOF' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'DOT' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'COMMA' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'COLON' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'BAR' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LBRACKET' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'RBRACKET' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'QUOTE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LPAREN' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'RPAREN' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'SLASH' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'BSLASH' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'PRIME' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LCURLY' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'RCURLY' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'GLOBALLY' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'SCHEME' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'CLASS' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'TYPE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'VALUE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'AXIOM' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'END' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'ALL' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'EXISTS' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'EXACTLY_ONE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'TS' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'TR' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'WHERE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'VARIABLE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'INIT_CONSTRAINT' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'ARRAY' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'OF' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LTL_ASSERTION' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'DETERMINISTIC' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'NONDETERMINISTIC' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'IS' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'EQ' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LT' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'GT' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'GE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'MI' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'PL' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'GU' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'IM' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LAND' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'LOR' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'NEG' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'FALSE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'TRUE' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'CHAR' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'TEXT' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'INT' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'ID' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action 'error' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action '#' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
    action '$$' (noprec):   reduce temporal_modal_operators --> 'GLOBALLY'
  immediate action:   reduce temporal_modal_operators --> 'GLOBALLY'  gotos:state 121:  items:    accessor -> 'TEXT' . 
    accessor -> 'TEXT' . 'PRIME'
    accessor -> 'TEXT' . 'LBRACKET' value_expressions 'RBRACKET'
    accessor -> 'TEXT' . 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
  actions:    action 'EOF' (noprec):   reduce accessor --> 'TEXT'
    action 'DOT' (noprec):   reduce accessor --> 'TEXT'
    action 'COMMA' (noprec):   reduce accessor --> 'TEXT'
    action 'COLON' (noprec):   reduce accessor --> 'TEXT'
    action 'BAR' (noprec):   reduce accessor --> 'TEXT'
    action 'LBRACKET' (noprec):   shift 123
    action 'RBRACKET' (noprec):   reduce accessor --> 'TEXT'
    action 'QUOTE' (noprec):   reduce accessor --> 'TEXT'
    action 'LPAREN' (noprec):   reduce accessor --> 'TEXT'
    action 'RPAREN' (noprec):   reduce accessor --> 'TEXT'
    action 'SLASH' (noprec):   reduce accessor --> 'TEXT'
    action 'BSLASH' (noprec):   reduce accessor --> 'TEXT'
    action 'PRIME' (noprec):   shift 122
    action 'LCURLY' (noprec):   reduce accessor --> 'TEXT'
    action 'RCURLY' (noprec):   reduce accessor --> 'TEXT'
    action 'GLOBALLY' (noprec):   reduce accessor --> 'TEXT'
    action 'SCHEME' (noprec):   reduce accessor --> 'TEXT'
    action 'CLASS' (noprec):   reduce accessor --> 'TEXT'
    action 'TYPE' (noprec):   reduce accessor --> 'TEXT'
    action 'VALUE' (noprec):   reduce accessor --> 'TEXT'
    action 'AXIOM' (noprec):   reduce accessor --> 'TEXT'
    action 'END' (noprec):   reduce accessor --> 'TEXT'
    action 'ALL' (noprec):   reduce accessor --> 'TEXT'
    action 'EXISTS' (noprec):   reduce accessor --> 'TEXT'
    action 'EXACTLY_ONE' (noprec):   reduce accessor --> 'TEXT'
    action 'TS' (noprec):   reduce accessor --> 'TEXT'
    action 'TR' (noprec):   reduce accessor --> 'TEXT'
    action 'WHERE' (noprec):   reduce accessor --> 'TEXT'
    action 'VARIABLE' (noprec):   reduce accessor --> 'TEXT'
    action 'INIT_CONSTRAINT' (noprec):   reduce accessor --> 'TEXT'
    action 'ARRAY' (noprec):   reduce accessor --> 'TEXT'
    action 'OF' (noprec):   reduce accessor --> 'TEXT'
    action 'LTL_ASSERTION' (noprec):   reduce accessor --> 'TEXT'
    action 'DETERMINISTIC' (noprec):   reduce accessor --> 'TEXT'
    action 'NONDETERMINISTIC' (noprec):   reduce accessor --> 'TEXT'
    action 'IS' (noprec):   reduce accessor --> 'TEXT'
    action 'EQ' (noprec):   reduce accessor --> 'TEXT'
    action 'LT' (noprec):   reduce accessor --> 'TEXT'
    action 'LE' (noprec):   reduce accessor --> 'TEXT'
    action 'GT' (noprec):   reduce accessor --> 'TEXT'
    action 'GE' (noprec):   reduce accessor --> 'TEXT'
    action 'MI' (noprec):   reduce accessor --> 'TEXT'
    action 'PL' (noprec):   reduce accessor --> 'TEXT'
    action 'GU' (noprec):   reduce accessor --> 'TEXT'
    action 'IM' (noprec):   reduce accessor --> 'TEXT'
    action 'LAND' (noprec):   reduce accessor --> 'TEXT'
    action 'LOR' (noprec):   reduce accessor --> 'TEXT'
    action 'NEG' (noprec):   reduce accessor --> 'TEXT'
    action 'FALSE' (noprec):   reduce accessor --> 'TEXT'
    action 'TRUE' (noprec):   reduce accessor --> 'TEXT'
    action 'CHAR' (noprec):   reduce accessor --> 'TEXT'
    action 'TEXT' (noprec):   reduce accessor --> 'TEXT'
    action 'INT' (noprec):   reduce accessor --> 'TEXT'
    action 'ID' (noprec):   reduce accessor --> 'TEXT'
    action 'error' (noprec):   reduce accessor --> 'TEXT'
    action '#' (noprec):   reduce accessor --> 'TEXT'
    action '$$' (noprec):   reduce accessor --> 'TEXT'
  immediate action: <none>  gotos:state 122:  items:    accessor -> 'TEXT' 'PRIME' . 
    accessor -> 'TEXT' 'PRIME' . 'LBRACKET' value_expressions 'RBRACKET'
  actions:    action 'EOF' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'DOT' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'COMMA' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'COLON' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'BAR' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LBRACKET' (noprec):   shift 125
    action 'RBRACKET' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'QUOTE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LPAREN' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'RPAREN' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'SLASH' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'BSLASH' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'PRIME' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LCURLY' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'RCURLY' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'GLOBALLY' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'SCHEME' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'CLASS' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'TYPE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'VALUE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'AXIOM' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'END' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'ALL' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'EXISTS' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'EXACTLY_ONE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'TS' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'TR' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'WHERE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'VARIABLE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'INIT_CONSTRAINT' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'ARRAY' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'OF' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LTL_ASSERTION' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'DETERMINISTIC' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'NONDETERMINISTIC' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'IS' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'EQ' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LT' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'GT' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'GE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'MI' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'PL' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'GU' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'IM' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LAND' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'LOR' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'NEG' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'FALSE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'TRUE' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'CHAR' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'TEXT' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'INT' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'ID' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action 'error' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action '#' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
    action '$$' (noprec):   reduce accessor --> 'TEXT' 'PRIME'
  immediate action: <none>  gotos:state 123:  items:    accessor -> 'TEXT' 'LBRACKET' . value_expressions 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expressions: 89
    goto value_expression: 87
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 124:  items:    accessor -> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'DOT' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'COMMA' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'COLON' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'BAR' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'QUOTE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LPAREN' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'RPAREN' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'SLASH' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'BSLASH' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'PRIME' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LCURLY' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'RCURLY' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GLOBALLY' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'SCHEME' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'CLASS' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TYPE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'VALUE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'AXIOM' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'END' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'ALL' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'EXISTS' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'EXACTLY_ONE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TS' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TR' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'WHERE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'VARIABLE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'INIT_CONSTRAINT' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'ARRAY' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'OF' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LTL_ASSERTION' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'DETERMINISTIC' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'NONDETERMINISTIC' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'IS' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'EQ' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LT' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GT' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'MI' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'PL' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GU' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'IM' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LAND' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LOR' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'NEG' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'FALSE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TRUE' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'CHAR' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TEXT' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'INT' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'ID' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action 'error' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action '#' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
    action '$$' (noprec):   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'
  immediate action:   reduce accessor --> 'TEXT' 'LBRACKET' value_expressions 'RBRACKET'  gotos:state 125:  items:    accessor -> 'TEXT' 'PRIME' 'LBRACKET' . value_expressions 'RBRACKET'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expressions: 90
    goto value_expression: 87
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 126:  items:    accessor -> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET' . 
  actions:    action 'EOF' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'DOT' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'COMMA' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'COLON' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'BAR' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LBRACKET' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'RBRACKET' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'QUOTE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LPAREN' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'RPAREN' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'SLASH' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'BSLASH' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'PRIME' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LCURLY' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'RCURLY' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GLOBALLY' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'SCHEME' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'CLASS' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TYPE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'VALUE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'AXIOM' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'END' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'ALL' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'EXISTS' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'EXACTLY_ONE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TS' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TR' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'WHERE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'VARIABLE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'INIT_CONSTRAINT' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'ARRAY' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'OF' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LTL_ASSERTION' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'DETERMINISTIC' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'NONDETERMINISTIC' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'IS' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'EQ' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LT' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GT' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'MI' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'PL' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'GU' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'IM' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LAND' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'LOR' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'NEG' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'FALSE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TRUE' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'CHAR' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'TEXT' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'INT' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'ID' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action 'error' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action '#' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
    action '$$' (noprec):   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'
  immediate action:   reduce accessor --> 'TEXT' 'PRIME' 'LBRACKET' value_expressions 'RBRACKET'  gotos:state 127:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression 'LT' value_expression . 
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'DOT' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'COMMA' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'COLON' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'BAR' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'RBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'QUOTE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'RPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'SLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'BSLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'PRIME' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'RCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'GLOBALLY' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'SCHEME' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'CLASS' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'TYPE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'VALUE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'AXIOM' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'END' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'ALL' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'EXISTS' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'EXACTLY_ONE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'TS' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'TR' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'WHERE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'VARIABLE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'ARRAY' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'OF' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LTL_ASSERTION' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'DETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'NONDETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'IS' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'EQ' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LT' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'GT' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'GE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'IM' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LAND' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'LOR' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'TRUE' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'CHAR' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'TEXT' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'INT' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'ID' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action 'error' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action '#' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
    action '$$' (explicit left 9998):   reduce infix_expr --> value_expression 'LT' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 128:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression 'LE' value_expression . 
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'DOT' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'COMMA' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'COLON' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'BAR' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'RBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'QUOTE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'RPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'SLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'BSLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'PRIME' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'RCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'GLOBALLY' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'SCHEME' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'CLASS' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'TYPE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'VALUE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'AXIOM' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'END' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'ALL' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'EXISTS' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'EXACTLY_ONE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'TS' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'TR' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'WHERE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'VARIABLE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'ARRAY' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'OF' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LTL_ASSERTION' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'DETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'NONDETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'IS' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'EQ' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LT' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'GT' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'GE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'IM' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LAND' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'LOR' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'TRUE' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'CHAR' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'TEXT' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'INT' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'ID' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action 'error' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action '#' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
    action '$$' (explicit left 9998):   reduce infix_expr --> value_expression 'LE' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 129:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression 'GT' value_expression . 
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'DOT' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'COMMA' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'COLON' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'BAR' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'RBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'QUOTE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'RPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'SLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'BSLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'PRIME' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'RCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'GLOBALLY' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'SCHEME' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'CLASS' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'TYPE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'VALUE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'AXIOM' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'END' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'ALL' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'EXISTS' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'EXACTLY_ONE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'TS' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'TR' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'WHERE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'VARIABLE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'ARRAY' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'OF' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LTL_ASSERTION' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'DETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'NONDETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'IS' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'EQ' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LT' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'GT' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'GE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'IM' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LAND' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'LOR' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'TRUE' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'CHAR' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'TEXT' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'INT' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'ID' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action 'error' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action '#' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
    action '$$' (explicit left 9998):   reduce infix_expr --> value_expression 'GT' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 130:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression 'GE' value_expression . 
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'DOT' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'COMMA' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'COLON' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'BAR' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'RBRACKET' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'QUOTE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'RPAREN' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'SLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'BSLASH' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'PRIME' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'RCURLY' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'GLOBALLY' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'SCHEME' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'CLASS' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'TYPE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'VALUE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'AXIOM' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'END' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'ALL' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'EXISTS' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'EXACTLY_ONE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'TS' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'TR' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'WHERE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'VARIABLE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'ARRAY' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'OF' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LTL_ASSERTION' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'DETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'NONDETERMINISTIC' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'IS' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'EQ' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LT' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'GT' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'GE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'IM' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LAND' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'LOR' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'TRUE' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'CHAR' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'TEXT' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'INT' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'ID' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action 'error' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action '#' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
    action '$$' (explicit left 9998):   reduce infix_expr --> value_expression 'GE' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 131:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression 'EQ' value_expression . 
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'DOT' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'COMMA' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'COLON' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'BAR' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'LBRACKET' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'RBRACKET' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'QUOTE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'LPAREN' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'RPAREN' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'SLASH' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'BSLASH' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'PRIME' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'LCURLY' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'RCURLY' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'GLOBALLY' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'SCHEME' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'CLASS' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'TYPE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'VALUE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'AXIOM' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'END' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'ALL' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'EXISTS' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'EXACTLY_ONE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'TS' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'TR' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'WHERE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'VARIABLE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'ARRAY' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'OF' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'LTL_ASSERTION' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'DETERMINISTIC' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'NONDETERMINISTIC' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'IS' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'IM' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'LAND' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'LOR' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'TRUE' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'CHAR' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'TEXT' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'INT' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'ID' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action 'error' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action '#' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
    action '$$' (explicit right 9997):   reduce infix_expr --> value_expression 'EQ' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 132:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression 'NEG' 'EQ' value_expression . 
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'DOT' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'COMMA' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'COLON' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'BAR' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'LBRACKET' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'RBRACKET' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'QUOTE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'LPAREN' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'RPAREN' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'SLASH' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'BSLASH' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'PRIME' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'LCURLY' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'RCURLY' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'GLOBALLY' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'SCHEME' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'CLASS' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'TYPE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'VALUE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'AXIOM' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'END' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'ALL' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'EXISTS' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'EXACTLY_ONE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'TS' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'TR' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'WHERE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'VARIABLE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'ARRAY' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'OF' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'LTL_ASSERTION' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'DETERMINISTIC' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'NONDETERMINISTIC' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'IS' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'IM' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'LAND' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'LOR' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'TRUE' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'CHAR' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'TEXT' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'INT' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'ID' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action 'error' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action '#' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
    action '$$' (explicit right 9997):   reduce infix_expr --> value_expression 'NEG' 'EQ' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 133:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression 'PL' value_expression . 
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'DOT' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'COMMA' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'COLON' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'BAR' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LBRACKET' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'RBRACKET' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'QUOTE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LPAREN' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'RPAREN' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'SLASH' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'BSLASH' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'PRIME' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LCURLY' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'RCURLY' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'GLOBALLY' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'SCHEME' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'CLASS' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'TYPE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'VALUE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'AXIOM' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'END' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'ALL' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'EXISTS' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'EXACTLY_ONE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'TS' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'TR' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'WHERE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'VARIABLE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'ARRAY' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'OF' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LTL_ASSERTION' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'DETERMINISTIC' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'NONDETERMINISTIC' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'IS' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'EQ' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LT' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'GT' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'GE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'MI' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'PL' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'GU' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'IM' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LAND' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'LOR' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'TRUE' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'CHAR' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'TEXT' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'INT' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'ID' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action 'error' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action '#' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
    action '$$' (explicit left 9999):   reduce infix_expr --> value_expression 'PL' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 134:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    infix_expr -> value_expression 'MI' value_expression . 
    axiom_infix_expr -> value_expression . infix_conn value_expression
  actions:    action 'EOF' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'DOT' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'COMMA' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'COLON' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'BAR' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LBRACKET' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'RBRACKET' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'QUOTE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LPAREN' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'RPAREN' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'SLASH' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'BSLASH' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'PRIME' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LCURLY' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'RCURLY' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'GLOBALLY' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'SCHEME' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'CLASS' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'TYPE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'VALUE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'AXIOM' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'END' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'ALL' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'EXISTS' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'EXACTLY_ONE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'TS' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'TR' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'WHERE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'VARIABLE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'INIT_CONSTRAINT' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'ARRAY' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'OF' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LTL_ASSERTION' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'DETERMINISTIC' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'NONDETERMINISTIC' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'IS' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'EQ' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LT' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'GT' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'GE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'MI' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'PL' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'GU' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'IM' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LAND' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'LOR' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'TRUE' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'CHAR' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'TEXT' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'INT' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'ID' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action 'error' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action '#' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
    action '$$' (explicit left 9999):   reduce infix_expr --> value_expression 'MI' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 135:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
    axiom_infix_expr -> value_expression infix_conn value_expression . 
  actions:    action 'EOF' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'DOT' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'COMMA' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'COLON' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'BAR' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'LBRACKET' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'RBRACKET' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'QUOTE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'LPAREN' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'RPAREN' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'SLASH' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'BSLASH' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'PRIME' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'LCURLY' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'RCURLY' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'GLOBALLY' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'SCHEME' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'CLASS' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'TYPE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'VALUE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'AXIOM' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'END' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'ALL' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'EXISTS' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'EXACTLY_ONE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'TS' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'TR' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'WHERE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'VARIABLE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'INIT_CONSTRAINT' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'ARRAY' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'OF' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'LTL_ASSERTION' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'DETERMINISTIC' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'NONDETERMINISTIC' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'IS' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'TRUE' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'CHAR' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'TEXT' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'INT' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'ID' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action 'error' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action '#' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
    action '$$' (noprec):   reduce axiom_infix_expr --> value_expression infix_conn value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 136:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
    value_declaration -> identifier 'COLON' type_expr 'EQ' value_expression . 
  actions:    action 'EOF' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'DOT' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'COMMA' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'COLON' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'BAR' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'LBRACKET' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'RBRACKET' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'QUOTE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'LPAREN' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'RPAREN' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'SLASH' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'BSLASH' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'PRIME' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'LCURLY' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'RCURLY' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'GLOBALLY' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'SCHEME' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'CLASS' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'TYPE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'VALUE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'AXIOM' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'END' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'ALL' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'EXISTS' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'EXACTLY_ONE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'TS' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'TR' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'WHERE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'VARIABLE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'ARRAY' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'OF' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'LTL_ASSERTION' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'DETERMINISTIC' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'NONDETERMINISTIC' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'IS' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'TRUE' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'CHAR' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'TEXT' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'INT' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'ID' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action 'error' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action '#' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
    action '$$' (explicit right 9997):   reduce value_declaration --> identifier 'COLON' type_expr 'EQ' value_expression
  immediate action: <none>  gotos:    goto infix_conn: 147
state 137:  items:    infix_expr -> value_expression . 'LT' value_expression
    infix_expr -> value_expression . 'LE' value_expression
    infix_expr -> value_expression . 'GT' value_expression
    infix_expr -> value_expression . 'GE' value_expression
    infix_expr -> value_expression . 'EQ' value_expression
    infix_expr -> value_expression . 'NEG' 'EQ' value_expression
    infix_expr -> value_expression . 'PL' value_expression
    infix_expr -> value_expression . 'MI' value_expression
    axiom_infix_expr -> value_expression . infix_conn value_expression
    type_expr -> 'LCURLY' 'BAR' typing 'IS' value_expression . 'BAR' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   shift 193
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 142
    action 'LT' (explicit left 9998):   shift 138
    action 'LE' (explicit left 9998):   shift 139
    action 'GT' (explicit left 9998):   shift 140
    action 'GE' (explicit left 9998):   shift 141
    action 'MI' (explicit left 9999):   shift 146
    action 'PL' (explicit left 9999):   shift 145
    action 'GU' (noprec):   error
    action 'IM' (explicit left 9996):   shift 148
    action 'LAND' (explicit left 9996):   shift 149
    action 'LOR' (explicit left 9996):   shift 150
    action 'NEG' (noprec):   shift 143
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto infix_conn: 147
state 138:  items:    infix_expr -> value_expression 'LT' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 127
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 139:  items:    infix_expr -> value_expression 'LE' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 128
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 140:  items:    infix_expr -> value_expression 'GT' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 129
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 141:  items:    infix_expr -> value_expression 'GE' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 130
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 142:  items:    infix_expr -> value_expression 'EQ' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 131
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 143:  items:    infix_expr -> value_expression 'NEG' . 'EQ' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 144
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 144:  items:    infix_expr -> value_expression 'NEG' 'EQ' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 132
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 145:  items:    infix_expr -> value_expression 'PL' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 133
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 146:  items:    infix_expr -> value_expression 'MI' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 134
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 147:  items:    axiom_infix_expr -> value_expression infix_conn . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 135
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 148:  items:    infix_conn -> 'IM' . 
  actions:    action 'EOF' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'DOT' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'COMMA' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'COLON' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'BAR' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LBRACKET' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'RBRACKET' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'QUOTE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LPAREN' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'RPAREN' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'SLASH' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'BSLASH' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'PRIME' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LCURLY' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'RCURLY' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'GLOBALLY' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'SCHEME' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'CLASS' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'TYPE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'VALUE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'AXIOM' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'END' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'ALL' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'EXISTS' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'EXACTLY_ONE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'TS' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'TR' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'WHERE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'VARIABLE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'INIT_CONSTRAINT' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'ARRAY' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'OF' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LTL_ASSERTION' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'DETERMINISTIC' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'NONDETERMINISTIC' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'IS' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'EQ' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LT' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'GT' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'GE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'MI' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'PL' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'GU' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'IM' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LAND' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'LOR' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'NEG' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'FALSE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'TRUE' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'CHAR' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'TEXT' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'INT' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'ID' (explicit left 9996):   reduce infix_conn --> 'IM'
    action 'error' (explicit left 9996):   reduce infix_conn --> 'IM'
    action '#' (explicit left 9996):   reduce infix_conn --> 'IM'
    action '$$' (explicit left 9996):   reduce infix_conn --> 'IM'
  immediate action:   reduce infix_conn --> 'IM'  gotos:state 149:  items:    infix_conn -> 'LAND' . 
  actions:    action 'EOF' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'DOT' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'COMMA' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'COLON' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'BAR' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LBRACKET' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'RBRACKET' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'QUOTE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LPAREN' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'RPAREN' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'SLASH' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'BSLASH' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'PRIME' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LCURLY' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'RCURLY' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'GLOBALLY' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'SCHEME' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'CLASS' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'TYPE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'VALUE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'AXIOM' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'END' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'ALL' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'EXISTS' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'EXACTLY_ONE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'TS' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'TR' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'WHERE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'VARIABLE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'INIT_CONSTRAINT' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'ARRAY' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'OF' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LTL_ASSERTION' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'DETERMINISTIC' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'NONDETERMINISTIC' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'IS' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'EQ' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LT' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'GT' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'GE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'MI' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'PL' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'GU' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'IM' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LAND' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'LOR' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'NEG' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'FALSE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'TRUE' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'CHAR' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'TEXT' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'INT' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'ID' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action 'error' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action '#' (explicit left 9996):   reduce infix_conn --> 'LAND'
    action '$$' (explicit left 9996):   reduce infix_conn --> 'LAND'
  immediate action:   reduce infix_conn --> 'LAND'  gotos:state 150:  items:    infix_conn -> 'LOR' . 
  actions:    action 'EOF' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'DOT' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'COMMA' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'COLON' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'BAR' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LBRACKET' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'RBRACKET' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'QUOTE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LPAREN' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'RPAREN' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'SLASH' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'BSLASH' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'PRIME' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LCURLY' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'RCURLY' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'GLOBALLY' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'SCHEME' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'CLASS' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'TYPE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'VALUE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'AXIOM' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'END' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'ALL' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'EXISTS' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'EXACTLY_ONE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'TS' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'TR' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'WHERE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'VARIABLE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'INIT_CONSTRAINT' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'ARRAY' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'OF' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LTL_ASSERTION' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'DETERMINISTIC' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'NONDETERMINISTIC' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'IS' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'EQ' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LT' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'GT' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'GE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'MI' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'PL' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'GU' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'IM' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LAND' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'LOR' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'NEG' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'FALSE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'TRUE' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'CHAR' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'TEXT' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'INT' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'ID' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action 'error' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action '#' (explicit left 9996):   reduce infix_conn --> 'LOR'
    action '$$' (explicit left 9996):   reduce infix_conn --> 'LOR'
  immediate action:   reduce infix_conn --> 'LOR'  gotos:state 151:  items:    quantifier -> 'ALL' . 
  actions:    action 'EOF' (noprec):   reduce quantifier --> 'ALL'
    action 'DOT' (noprec):   reduce quantifier --> 'ALL'
    action 'COMMA' (noprec):   reduce quantifier --> 'ALL'
    action 'COLON' (noprec):   reduce quantifier --> 'ALL'
    action 'BAR' (noprec):   reduce quantifier --> 'ALL'
    action 'LBRACKET' (noprec):   reduce quantifier --> 'ALL'
    action 'RBRACKET' (noprec):   reduce quantifier --> 'ALL'
    action 'QUOTE' (noprec):   reduce quantifier --> 'ALL'
    action 'LPAREN' (noprec):   reduce quantifier --> 'ALL'
    action 'RPAREN' (noprec):   reduce quantifier --> 'ALL'
    action 'SLASH' (noprec):   reduce quantifier --> 'ALL'
    action 'BSLASH' (noprec):   reduce quantifier --> 'ALL'
    action 'PRIME' (noprec):   reduce quantifier --> 'ALL'
    action 'LCURLY' (noprec):   reduce quantifier --> 'ALL'
    action 'RCURLY' (noprec):   reduce quantifier --> 'ALL'
    action 'GLOBALLY' (noprec):   reduce quantifier --> 'ALL'
    action 'SCHEME' (noprec):   reduce quantifier --> 'ALL'
    action 'CLASS' (noprec):   reduce quantifier --> 'ALL'
    action 'TYPE' (noprec):   reduce quantifier --> 'ALL'
    action 'VALUE' (noprec):   reduce quantifier --> 'ALL'
    action 'AXIOM' (noprec):   reduce quantifier --> 'ALL'
    action 'END' (noprec):   reduce quantifier --> 'ALL'
    action 'ALL' (noprec):   reduce quantifier --> 'ALL'
    action 'EXISTS' (noprec):   reduce quantifier --> 'ALL'
    action 'EXACTLY_ONE' (noprec):   reduce quantifier --> 'ALL'
    action 'TS' (noprec):   reduce quantifier --> 'ALL'
    action 'TR' (noprec):   reduce quantifier --> 'ALL'
    action 'WHERE' (noprec):   reduce quantifier --> 'ALL'
    action 'VARIABLE' (noprec):   reduce quantifier --> 'ALL'
    action 'INIT_CONSTRAINT' (noprec):   reduce quantifier --> 'ALL'
    action 'ARRAY' (noprec):   reduce quantifier --> 'ALL'
    action 'OF' (noprec):   reduce quantifier --> 'ALL'
    action 'LTL_ASSERTION' (noprec):   reduce quantifier --> 'ALL'
    action 'DETERMINISTIC' (noprec):   reduce quantifier --> 'ALL'
    action 'NONDETERMINISTIC' (noprec):   reduce quantifier --> 'ALL'
    action 'IS' (noprec):   reduce quantifier --> 'ALL'
    action 'EQ' (noprec):   reduce quantifier --> 'ALL'
    action 'LT' (noprec):   reduce quantifier --> 'ALL'
    action 'LE' (noprec):   reduce quantifier --> 'ALL'
    action 'GT' (noprec):   reduce quantifier --> 'ALL'
    action 'GE' (noprec):   reduce quantifier --> 'ALL'
    action 'MI' (noprec):   reduce quantifier --> 'ALL'
    action 'PL' (noprec):   reduce quantifier --> 'ALL'
    action 'GU' (noprec):   reduce quantifier --> 'ALL'
    action 'IM' (noprec):   reduce quantifier --> 'ALL'
    action 'LAND' (noprec):   reduce quantifier --> 'ALL'
    action 'LOR' (noprec):   reduce quantifier --> 'ALL'
    action 'NEG' (noprec):   reduce quantifier --> 'ALL'
    action 'FALSE' (noprec):   reduce quantifier --> 'ALL'
    action 'TRUE' (noprec):   reduce quantifier --> 'ALL'
    action 'CHAR' (noprec):   reduce quantifier --> 'ALL'
    action 'TEXT' (noprec):   reduce quantifier --> 'ALL'
    action 'INT' (noprec):   reduce quantifier --> 'ALL'
    action 'ID' (noprec):   reduce quantifier --> 'ALL'
    action 'error' (noprec):   reduce quantifier --> 'ALL'
    action '#' (noprec):   reduce quantifier --> 'ALL'
    action '$$' (noprec):   reduce quantifier --> 'ALL'
  immediate action:   reduce quantifier --> 'ALL'  gotos:state 152:  items:    quantifier -> 'EXISTS' . 
  actions:    action 'EOF' (noprec):   reduce quantifier --> 'EXISTS'
    action 'DOT' (noprec):   reduce quantifier --> 'EXISTS'
    action 'COMMA' (noprec):   reduce quantifier --> 'EXISTS'
    action 'COLON' (noprec):   reduce quantifier --> 'EXISTS'
    action 'BAR' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LBRACKET' (noprec):   reduce quantifier --> 'EXISTS'
    action 'RBRACKET' (noprec):   reduce quantifier --> 'EXISTS'
    action 'QUOTE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LPAREN' (noprec):   reduce quantifier --> 'EXISTS'
    action 'RPAREN' (noprec):   reduce quantifier --> 'EXISTS'
    action 'SLASH' (noprec):   reduce quantifier --> 'EXISTS'
    action 'BSLASH' (noprec):   reduce quantifier --> 'EXISTS'
    action 'PRIME' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LCURLY' (noprec):   reduce quantifier --> 'EXISTS'
    action 'RCURLY' (noprec):   reduce quantifier --> 'EXISTS'
    action 'GLOBALLY' (noprec):   reduce quantifier --> 'EXISTS'
    action 'SCHEME' (noprec):   reduce quantifier --> 'EXISTS'
    action 'CLASS' (noprec):   reduce quantifier --> 'EXISTS'
    action 'TYPE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'VALUE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'AXIOM' (noprec):   reduce quantifier --> 'EXISTS'
    action 'END' (noprec):   reduce quantifier --> 'EXISTS'
    action 'ALL' (noprec):   reduce quantifier --> 'EXISTS'
    action 'EXISTS' (noprec):   reduce quantifier --> 'EXISTS'
    action 'EXACTLY_ONE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'TS' (noprec):   reduce quantifier --> 'EXISTS'
    action 'TR' (noprec):   reduce quantifier --> 'EXISTS'
    action 'WHERE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'VARIABLE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'INIT_CONSTRAINT' (noprec):   reduce quantifier --> 'EXISTS'
    action 'ARRAY' (noprec):   reduce quantifier --> 'EXISTS'
    action 'OF' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LTL_ASSERTION' (noprec):   reduce quantifier --> 'EXISTS'
    action 'DETERMINISTIC' (noprec):   reduce quantifier --> 'EXISTS'
    action 'NONDETERMINISTIC' (noprec):   reduce quantifier --> 'EXISTS'
    action 'IS' (noprec):   reduce quantifier --> 'EXISTS'
    action 'EQ' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LT' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'GT' (noprec):   reduce quantifier --> 'EXISTS'
    action 'GE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'MI' (noprec):   reduce quantifier --> 'EXISTS'
    action 'PL' (noprec):   reduce quantifier --> 'EXISTS'
    action 'GU' (noprec):   reduce quantifier --> 'EXISTS'
    action 'IM' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LAND' (noprec):   reduce quantifier --> 'EXISTS'
    action 'LOR' (noprec):   reduce quantifier --> 'EXISTS'
    action 'NEG' (noprec):   reduce quantifier --> 'EXISTS'
    action 'FALSE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'TRUE' (noprec):   reduce quantifier --> 'EXISTS'
    action 'CHAR' (noprec):   reduce quantifier --> 'EXISTS'
    action 'TEXT' (noprec):   reduce quantifier --> 'EXISTS'
    action 'INT' (noprec):   reduce quantifier --> 'EXISTS'
    action 'ID' (noprec):   reduce quantifier --> 'EXISTS'
    action 'error' (noprec):   reduce quantifier --> 'EXISTS'
    action '#' (noprec):   reduce quantifier --> 'EXISTS'
    action '$$' (noprec):   reduce quantifier --> 'EXISTS'
  immediate action:   reduce quantifier --> 'EXISTS'  gotos:state 153:  items:    quantifier -> 'EXACTLY_ONE' . 
  actions:    action 'EOF' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'DOT' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'COMMA' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'COLON' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'BAR' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LBRACKET' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'RBRACKET' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'QUOTE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LPAREN' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'RPAREN' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'SLASH' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'BSLASH' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'PRIME' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LCURLY' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'RCURLY' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'GLOBALLY' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'SCHEME' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'CLASS' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'TYPE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'VALUE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'AXIOM' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'END' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'ALL' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'EXISTS' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'EXACTLY_ONE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'TS' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'TR' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'WHERE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'VARIABLE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'INIT_CONSTRAINT' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'ARRAY' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'OF' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LTL_ASSERTION' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'DETERMINISTIC' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'NONDETERMINISTIC' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'IS' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'EQ' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LT' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'GT' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'GE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'MI' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'PL' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'GU' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'IM' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LAND' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'LOR' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'NEG' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'FALSE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'TRUE' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'CHAR' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'TEXT' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'INT' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'ID' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action 'error' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action '#' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
    action '$$' (noprec):   reduce quantifier --> 'EXACTLY_ONE'
  immediate action:   reduce quantifier --> 'EXACTLY_ONE'  gotos:state 154:  items:    quantifier -> 'DETERMINISTIC' . 
  actions:    action 'EOF' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'DOT' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'COMMA' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'COLON' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'BAR' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LBRACKET' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'RBRACKET' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'QUOTE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LPAREN' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'RPAREN' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'SLASH' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'BSLASH' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'PRIME' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LCURLY' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'RCURLY' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'GLOBALLY' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'SCHEME' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'CLASS' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'TYPE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'VALUE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'AXIOM' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'END' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'ALL' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'EXISTS' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'EXACTLY_ONE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'TS' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'TR' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'WHERE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'VARIABLE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'INIT_CONSTRAINT' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'ARRAY' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'OF' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LTL_ASSERTION' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'DETERMINISTIC' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'NONDETERMINISTIC' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'IS' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'EQ' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LT' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'GT' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'GE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'MI' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'PL' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'GU' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'IM' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LAND' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'LOR' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'NEG' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'FALSE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'TRUE' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'CHAR' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'TEXT' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'INT' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'ID' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action 'error' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action '#' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
    action '$$' (explicit left 9993):   reduce quantifier --> 'DETERMINISTIC'
  immediate action:   reduce quantifier --> 'DETERMINISTIC'  gotos:state 155:  items:    quantifier -> 'NONDETERMINISTIC' . 
  actions:    action 'EOF' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'DOT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'COMMA' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'COLON' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'BAR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LBRACKET' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'RBRACKET' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'QUOTE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LPAREN' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'RPAREN' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'SLASH' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'BSLASH' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'PRIME' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LCURLY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'RCURLY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GLOBALLY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'SCHEME' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'CLASS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TYPE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'VALUE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'AXIOM' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'END' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'ALL' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'EXISTS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'EXACTLY_ONE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'WHERE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'VARIABLE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'INIT_CONSTRAINT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'ARRAY' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'OF' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LTL_ASSERTION' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'DETERMINISTIC' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'NONDETERMINISTIC' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'IS' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'EQ' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'MI' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'PL' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'GU' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'IM' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LAND' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'LOR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'NEG' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'FALSE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TRUE' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'CHAR' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'TEXT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'INT' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'ID' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action 'error' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action '#' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
    action '$$' (explicit left 9993):   reduce quantifier --> 'NONDETERMINISTIC'
  immediate action:   reduce quantifier --> 'NONDETERMINISTIC'  gotos:state 156:  items:    value_declarations -> value_declaration . 
  actions:    action 'EOF' (noprec):   reduce value_declarations --> value_declaration
    action 'DOT' (noprec):   reduce value_declarations --> value_declaration
    action 'COMMA' (noprec):   reduce value_declarations --> value_declaration
    action 'COLON' (noprec):   reduce value_declarations --> value_declaration
    action 'BAR' (noprec):   reduce value_declarations --> value_declaration
    action 'LBRACKET' (noprec):   reduce value_declarations --> value_declaration
    action 'RBRACKET' (noprec):   reduce value_declarations --> value_declaration
    action 'QUOTE' (noprec):   reduce value_declarations --> value_declaration
    action 'LPAREN' (noprec):   reduce value_declarations --> value_declaration
    action 'RPAREN' (noprec):   reduce value_declarations --> value_declaration
    action 'SLASH' (noprec):   reduce value_declarations --> value_declaration
    action 'BSLASH' (noprec):   reduce value_declarations --> value_declaration
    action 'PRIME' (noprec):   reduce value_declarations --> value_declaration
    action 'LCURLY' (noprec):   reduce value_declarations --> value_declaration
    action 'RCURLY' (noprec):   reduce value_declarations --> value_declaration
    action 'GLOBALLY' (noprec):   reduce value_declarations --> value_declaration
    action 'SCHEME' (noprec):   reduce value_declarations --> value_declaration
    action 'CLASS' (noprec):   reduce value_declarations --> value_declaration
    action 'TYPE' (noprec):   reduce value_declarations --> value_declaration
    action 'VALUE' (noprec):   reduce value_declarations --> value_declaration
    action 'AXIOM' (noprec):   reduce value_declarations --> value_declaration
    action 'END' (noprec):   reduce value_declarations --> value_declaration
    action 'ALL' (noprec):   reduce value_declarations --> value_declaration
    action 'EXISTS' (noprec):   reduce value_declarations --> value_declaration
    action 'EXACTLY_ONE' (noprec):   reduce value_declarations --> value_declaration
    action 'TS' (noprec):   reduce value_declarations --> value_declaration
    action 'TR' (noprec):   reduce value_declarations --> value_declaration
    action 'WHERE' (noprec):   reduce value_declarations --> value_declaration
    action 'VARIABLE' (noprec):   reduce value_declarations --> value_declaration
    action 'INIT_CONSTRAINT' (noprec):   reduce value_declarations --> value_declaration
    action 'ARRAY' (noprec):   reduce value_declarations --> value_declaration
    action 'OF' (noprec):   reduce value_declarations --> value_declaration
    action 'LTL_ASSERTION' (noprec):   reduce value_declarations --> value_declaration
    action 'DETERMINISTIC' (noprec):   reduce value_declarations --> value_declaration
    action 'NONDETERMINISTIC' (noprec):   reduce value_declarations --> value_declaration
    action 'IS' (noprec):   reduce value_declarations --> value_declaration
    action 'EQ' (noprec):   reduce value_declarations --> value_declaration
    action 'LT' (noprec):   reduce value_declarations --> value_declaration
    action 'LE' (noprec):   reduce value_declarations --> value_declaration
    action 'GT' (noprec):   reduce value_declarations --> value_declaration
    action 'GE' (noprec):   reduce value_declarations --> value_declaration
    action 'MI' (noprec):   reduce value_declarations --> value_declaration
    action 'PL' (noprec):   reduce value_declarations --> value_declaration
    action 'GU' (noprec):   reduce value_declarations --> value_declaration
    action 'IM' (noprec):   reduce value_declarations --> value_declaration
    action 'LAND' (noprec):   reduce value_declarations --> value_declaration
    action 'LOR' (noprec):   reduce value_declarations --> value_declaration
    action 'NEG' (noprec):   reduce value_declarations --> value_declaration
    action 'FALSE' (noprec):   reduce value_declarations --> value_declaration
    action 'TRUE' (noprec):   reduce value_declarations --> value_declaration
    action 'CHAR' (noprec):   reduce value_declarations --> value_declaration
    action 'TEXT' (noprec):   reduce value_declarations --> value_declaration
    action 'INT' (noprec):   reduce value_declarations --> value_declaration
    action 'ID' (noprec):   reduce value_declarations --> value_declaration
    action 'error' (noprec):   reduce value_declarations --> value_declaration
    action '#' (noprec):   reduce value_declarations --> value_declaration
    action '$$' (noprec):   reduce value_declarations --> value_declaration
  immediate action:   reduce value_declarations --> value_declaration  gotos:state 157:  items:    value_declarations -> value_declarations 'COMMA' . value_declaration
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto identifier: 159
    goto value_declaration: 158
state 158:  items:    value_declarations -> value_declarations 'COMMA' value_declaration . 
  actions:    action 'EOF' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'DOT' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'COMMA' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'COLON' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'BAR' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LBRACKET' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'RBRACKET' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'QUOTE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LPAREN' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'RPAREN' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'SLASH' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'BSLASH' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'PRIME' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LCURLY' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'RCURLY' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'GLOBALLY' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'SCHEME' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'CLASS' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'TYPE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'VALUE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'AXIOM' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'END' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'ALL' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'EXISTS' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'EXACTLY_ONE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'TS' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'TR' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'WHERE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'VARIABLE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'INIT_CONSTRAINT' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'ARRAY' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'OF' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LTL_ASSERTION' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'DETERMINISTIC' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'NONDETERMINISTIC' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'IS' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'EQ' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LT' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'GT' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'GE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'MI' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'PL' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'GU' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'IM' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LAND' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'LOR' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'NEG' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'FALSE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'TRUE' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'CHAR' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'TEXT' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'INT' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'ID' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action 'error' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action '#' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
    action '$$' (noprec):   reduce value_declarations --> value_declarations 'COMMA' value_declaration
  immediate action:   reduce value_declarations --> value_declarations 'COMMA' value_declaration  gotos:state 159:  items:    value_declaration -> identifier . 'COLON' type_expr
    value_declaration -> identifier . 'COLON' type_expr 'EQ' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 160
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 160:  items:    value_declaration -> identifier 'COLON' . type_expr
    value_declaration -> identifier 'COLON' . type_expr 'EQ' value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 189
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   shift 185
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 184
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_expr: 161
state 161:  items:    value_declaration -> identifier 'COLON' type_expr . 
    value_declaration -> identifier 'COLON' type_expr . 'EQ' value_expression
  actions:    action 'EOF' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'DOT' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'COMMA' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'COLON' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'BAR' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LBRACKET' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'RBRACKET' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'QUOTE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LPAREN' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'RPAREN' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'SLASH' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'BSLASH' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'PRIME' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LCURLY' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'RCURLY' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'GLOBALLY' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'SCHEME' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'CLASS' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'TYPE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'VALUE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'AXIOM' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'END' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'ALL' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'EXISTS' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'EXACTLY_ONE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'TS' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'TR' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'WHERE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'VARIABLE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'ARRAY' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'OF' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LTL_ASSERTION' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'DETERMINISTIC' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'NONDETERMINISTIC' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'IS' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'EQ' (explicit right 9997):   shift 162
    action 'LT' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'GT' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'GE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'MI' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'PL' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'GU' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'IM' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LAND' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'LOR' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'NEG' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'FALSE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'TRUE' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'CHAR' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'TEXT' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'INT' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'ID' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action 'error' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action '#' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
    action '$$' (noprec):   reduce value_declaration --> identifier 'COLON' type_expr
  immediate action: <none>  gotos:state 162:  items:    value_declaration -> identifier 'COLON' type_expr 'EQ' . value_expression
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 136
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 163:  items:    typing -> identifier . 'COLON' type_expr
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   shift 164
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 164:  items:    typing -> identifier 'COLON' . type_expr
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 189
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   shift 185
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 184
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_expr: 165
state 165:  items:    typing -> identifier 'COLON' type_expr . 
  actions:    action 'EOF' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'DOT' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'COMMA' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'COLON' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'BAR' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LBRACKET' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'RBRACKET' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'QUOTE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LPAREN' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'RPAREN' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'SLASH' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'BSLASH' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'PRIME' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LCURLY' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'RCURLY' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'GLOBALLY' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'SCHEME' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'CLASS' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'TYPE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'VALUE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'AXIOM' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'END' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'ALL' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'EXISTS' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'EXACTLY_ONE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'TS' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'TR' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'WHERE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'VARIABLE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'ARRAY' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'OF' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LTL_ASSERTION' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'DETERMINISTIC' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'NONDETERMINISTIC' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'IS' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'EQ' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LT' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'GT' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'GE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'MI' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'PL' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'GU' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'IM' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LAND' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'LOR' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'NEG' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'FALSE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'TRUE' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'CHAR' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'TEXT' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'INT' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'ID' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action 'error' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action '#' (noprec):   reduce typing --> identifier 'COLON' type_expr
    action '$$' (noprec):   reduce typing --> identifier 'COLON' type_expr
  immediate action:   reduce typing --> identifier 'COLON' type_expr  gotos:state 166:  items:    typing_list -> rev_typing_list . 
  actions:    action 'EOF' (noprec):   reduce typing_list --> rev_typing_list
    action 'DOT' (noprec):   reduce typing_list --> rev_typing_list
    action 'COMMA' (noprec):   reduce typing_list --> rev_typing_list
    action 'COLON' (noprec):   reduce typing_list --> rev_typing_list
    action 'BAR' (noprec):   reduce typing_list --> rev_typing_list
    action 'LBRACKET' (noprec):   reduce typing_list --> rev_typing_list
    action 'RBRACKET' (noprec):   reduce typing_list --> rev_typing_list
    action 'QUOTE' (noprec):   reduce typing_list --> rev_typing_list
    action 'LPAREN' (noprec):   reduce typing_list --> rev_typing_list
    action 'RPAREN' (noprec):   reduce typing_list --> rev_typing_list
    action 'SLASH' (noprec):   reduce typing_list --> rev_typing_list
    action 'BSLASH' (noprec):   reduce typing_list --> rev_typing_list
    action 'PRIME' (noprec):   reduce typing_list --> rev_typing_list
    action 'LCURLY' (noprec):   reduce typing_list --> rev_typing_list
    action 'RCURLY' (noprec):   reduce typing_list --> rev_typing_list
    action 'GLOBALLY' (noprec):   reduce typing_list --> rev_typing_list
    action 'SCHEME' (noprec):   reduce typing_list --> rev_typing_list
    action 'CLASS' (noprec):   reduce typing_list --> rev_typing_list
    action 'TYPE' (noprec):   reduce typing_list --> rev_typing_list
    action 'VALUE' (noprec):   reduce typing_list --> rev_typing_list
    action 'AXIOM' (noprec):   reduce typing_list --> rev_typing_list
    action 'END' (noprec):   reduce typing_list --> rev_typing_list
    action 'ALL' (noprec):   reduce typing_list --> rev_typing_list
    action 'EXISTS' (noprec):   reduce typing_list --> rev_typing_list
    action 'EXACTLY_ONE' (noprec):   reduce typing_list --> rev_typing_list
    action 'TS' (noprec):   reduce typing_list --> rev_typing_list
    action 'TR' (noprec):   reduce typing_list --> rev_typing_list
    action 'WHERE' (noprec):   reduce typing_list --> rev_typing_list
    action 'VARIABLE' (noprec):   reduce typing_list --> rev_typing_list
    action 'INIT_CONSTRAINT' (noprec):   reduce typing_list --> rev_typing_list
    action 'ARRAY' (noprec):   reduce typing_list --> rev_typing_list
    action 'OF' (noprec):   reduce typing_list --> rev_typing_list
    action 'LTL_ASSERTION' (noprec):   reduce typing_list --> rev_typing_list
    action 'DETERMINISTIC' (noprec):   reduce typing_list --> rev_typing_list
    action 'NONDETERMINISTIC' (noprec):   reduce typing_list --> rev_typing_list
    action 'IS' (noprec):   reduce typing_list --> rev_typing_list
    action 'EQ' (noprec):   reduce typing_list --> rev_typing_list
    action 'LT' (noprec):   reduce typing_list --> rev_typing_list
    action 'LE' (noprec):   reduce typing_list --> rev_typing_list
    action 'GT' (noprec):   reduce typing_list --> rev_typing_list
    action 'GE' (noprec):   reduce typing_list --> rev_typing_list
    action 'MI' (noprec):   reduce typing_list --> rev_typing_list
    action 'PL' (noprec):   reduce typing_list --> rev_typing_list
    action 'GU' (noprec):   reduce typing_list --> rev_typing_list
    action 'IM' (noprec):   reduce typing_list --> rev_typing_list
    action 'LAND' (noprec):   reduce typing_list --> rev_typing_list
    action 'LOR' (noprec):   reduce typing_list --> rev_typing_list
    action 'NEG' (noprec):   reduce typing_list --> rev_typing_list
    action 'FALSE' (noprec):   reduce typing_list --> rev_typing_list
    action 'TRUE' (noprec):   reduce typing_list --> rev_typing_list
    action 'CHAR' (noprec):   reduce typing_list --> rev_typing_list
    action 'TEXT' (noprec):   reduce typing_list --> rev_typing_list
    action 'INT' (noprec):   reduce typing_list --> rev_typing_list
    action 'ID' (noprec):   reduce typing_list --> rev_typing_list
    action 'error' (noprec):   reduce typing_list --> rev_typing_list
    action '#' (noprec):   reduce typing_list --> rev_typing_list
    action '$$' (noprec):   reduce typing_list --> rev_typing_list
  immediate action:   reduce typing_list --> rev_typing_list  gotos:state 167:  items:    rev_typing_list -> typing . 
  actions:    action 'EOF' (noprec):   reduce rev_typing_list --> typing
    action 'DOT' (noprec):   reduce rev_typing_list --> typing
    action 'COMMA' (noprec):   reduce rev_typing_list --> typing
    action 'COLON' (noprec):   reduce rev_typing_list --> typing
    action 'BAR' (noprec):   reduce rev_typing_list --> typing
    action 'LBRACKET' (noprec):   reduce rev_typing_list --> typing
    action 'RBRACKET' (noprec):   reduce rev_typing_list --> typing
    action 'QUOTE' (noprec):   reduce rev_typing_list --> typing
    action 'LPAREN' (noprec):   reduce rev_typing_list --> typing
    action 'RPAREN' (noprec):   reduce rev_typing_list --> typing
    action 'SLASH' (noprec):   reduce rev_typing_list --> typing
    action 'BSLASH' (noprec):   reduce rev_typing_list --> typing
    action 'PRIME' (noprec):   reduce rev_typing_list --> typing
    action 'LCURLY' (noprec):   reduce rev_typing_list --> typing
    action 'RCURLY' (noprec):   reduce rev_typing_list --> typing
    action 'GLOBALLY' (noprec):   reduce rev_typing_list --> typing
    action 'SCHEME' (noprec):   reduce rev_typing_list --> typing
    action 'CLASS' (noprec):   reduce rev_typing_list --> typing
    action 'TYPE' (noprec):   reduce rev_typing_list --> typing
    action 'VALUE' (noprec):   reduce rev_typing_list --> typing
    action 'AXIOM' (noprec):   reduce rev_typing_list --> typing
    action 'END' (noprec):   reduce rev_typing_list --> typing
    action 'ALL' (noprec):   reduce rev_typing_list --> typing
    action 'EXISTS' (noprec):   reduce rev_typing_list --> typing
    action 'EXACTLY_ONE' (noprec):   reduce rev_typing_list --> typing
    action 'TS' (noprec):   reduce rev_typing_list --> typing
    action 'TR' (noprec):   reduce rev_typing_list --> typing
    action 'WHERE' (noprec):   reduce rev_typing_list --> typing
    action 'VARIABLE' (noprec):   reduce rev_typing_list --> typing
    action 'INIT_CONSTRAINT' (noprec):   reduce rev_typing_list --> typing
    action 'ARRAY' (noprec):   reduce rev_typing_list --> typing
    action 'OF' (noprec):   reduce rev_typing_list --> typing
    action 'LTL_ASSERTION' (noprec):   reduce rev_typing_list --> typing
    action 'DETERMINISTIC' (noprec):   reduce rev_typing_list --> typing
    action 'NONDETERMINISTIC' (noprec):   reduce rev_typing_list --> typing
    action 'IS' (noprec):   reduce rev_typing_list --> typing
    action 'EQ' (noprec):   reduce rev_typing_list --> typing
    action 'LT' (noprec):   reduce rev_typing_list --> typing
    action 'LE' (noprec):   reduce rev_typing_list --> typing
    action 'GT' (noprec):   reduce rev_typing_list --> typing
    action 'GE' (noprec):   reduce rev_typing_list --> typing
    action 'MI' (noprec):   reduce rev_typing_list --> typing
    action 'PL' (noprec):   reduce rev_typing_list --> typing
    action 'GU' (noprec):   reduce rev_typing_list --> typing
    action 'IM' (noprec):   reduce rev_typing_list --> typing
    action 'LAND' (noprec):   reduce rev_typing_list --> typing
    action 'LOR' (noprec):   reduce rev_typing_list --> typing
    action 'NEG' (noprec):   reduce rev_typing_list --> typing
    action 'FALSE' (noprec):   reduce rev_typing_list --> typing
    action 'TRUE' (noprec):   reduce rev_typing_list --> typing
    action 'CHAR' (noprec):   reduce rev_typing_list --> typing
    action 'TEXT' (noprec):   reduce rev_typing_list --> typing
    action 'INT' (noprec):   reduce rev_typing_list --> typing
    action 'ID' (noprec):   reduce rev_typing_list --> typing
    action 'error' (noprec):   reduce rev_typing_list --> typing
    action '#' (noprec):   reduce rev_typing_list --> typing
    action '$$' (noprec):   reduce rev_typing_list --> typing
  immediate action:   reduce rev_typing_list --> typing  gotos:state 168:  items:    rev_typing_list -> typing_list 'COMMA' . typing
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto identifier: 163
    goto typing: 169
state 169:  items:    rev_typing_list -> typing_list 'COMMA' typing . 
  actions:    action 'EOF' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'DOT' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'COMMA' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'COLON' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'BAR' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LBRACKET' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'RBRACKET' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'QUOTE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LPAREN' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'RPAREN' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'SLASH' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'BSLASH' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'PRIME' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LCURLY' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'RCURLY' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'GLOBALLY' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'SCHEME' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'CLASS' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'TYPE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'VALUE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'AXIOM' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'END' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'ALL' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'EXISTS' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'EXACTLY_ONE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'TS' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'TR' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'WHERE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'VARIABLE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'INIT_CONSTRAINT' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'ARRAY' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'OF' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LTL_ASSERTION' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'DETERMINISTIC' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'NONDETERMINISTIC' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'IS' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'EQ' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LT' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'GT' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'GE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'MI' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'PL' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'GU' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'IM' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LAND' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'LOR' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'NEG' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'FALSE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'TRUE' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'CHAR' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'TEXT' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'INT' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'ID' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action 'error' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action '#' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
    action '$$' (noprec):   reduce rev_typing_list --> typing_list 'COMMA' typing
  immediate action:   reduce rev_typing_list --> typing_list 'COMMA' typing  gotos:state 170:  items:    type_declarations -> 'TEXT' . type_definition
  actions:    action 'EOF' (noprec):   reduce type_definition --> 
    action 'DOT' (noprec):   reduce type_definition --> 
    action 'COMMA' (noprec):   reduce type_definition --> 
    action 'COLON' (noprec):   reduce type_definition --> 
    action 'BAR' (noprec):   reduce type_definition --> 
    action 'LBRACKET' (noprec):   reduce type_definition --> 
    action 'RBRACKET' (noprec):   reduce type_definition --> 
    action 'QUOTE' (noprec):   reduce type_definition --> 
    action 'LPAREN' (noprec):   reduce type_definition --> 
    action 'RPAREN' (noprec):   reduce type_definition --> 
    action 'SLASH' (noprec):   reduce type_definition --> 
    action 'BSLASH' (noprec):   reduce type_definition --> 
    action 'PRIME' (noprec):   reduce type_definition --> 
    action 'LCURLY' (noprec):   reduce type_definition --> 
    action 'RCURLY' (noprec):   reduce type_definition --> 
    action 'GLOBALLY' (noprec):   reduce type_definition --> 
    action 'SCHEME' (noprec):   reduce type_definition --> 
    action 'CLASS' (noprec):   reduce type_definition --> 
    action 'TYPE' (noprec):   reduce type_definition --> 
    action 'VALUE' (noprec):   reduce type_definition --> 
    action 'AXIOM' (noprec):   reduce type_definition --> 
    action 'END' (noprec):   reduce type_definition --> 
    action 'ALL' (noprec):   reduce type_definition --> 
    action 'EXISTS' (noprec):   reduce type_definition --> 
    action 'EXACTLY_ONE' (noprec):   reduce type_definition --> 
    action 'TS' (noprec):   reduce type_definition --> 
    action 'TR' (noprec):   reduce type_definition --> 
    action 'WHERE' (noprec):   reduce type_definition --> 
    action 'VARIABLE' (noprec):   reduce type_definition --> 
    action 'INIT_CONSTRAINT' (noprec):   reduce type_definition --> 
    action 'ARRAY' (noprec):   reduce type_definition --> 
    action 'OF' (noprec):   reduce type_definition --> 
    action 'LTL_ASSERTION' (noprec):   reduce type_definition --> 
    action 'DETERMINISTIC' (noprec):   reduce type_definition --> 
    action 'NONDETERMINISTIC' (noprec):   reduce type_definition --> 
    action 'IS' (noprec):   reduce type_definition --> 
    action 'EQ' (explicit right 9997):   shift 175
    action 'LT' (noprec):   reduce type_definition --> 
    action 'LE' (noprec):   reduce type_definition --> 
    action 'GT' (noprec):   reduce type_definition --> 
    action 'GE' (noprec):   reduce type_definition --> 
    action 'MI' (noprec):   reduce type_definition --> 
    action 'PL' (noprec):   reduce type_definition --> 
    action 'GU' (noprec):   reduce type_definition --> 
    action 'IM' (noprec):   reduce type_definition --> 
    action 'LAND' (noprec):   reduce type_definition --> 
    action 'LOR' (noprec):   reduce type_definition --> 
    action 'NEG' (noprec):   reduce type_definition --> 
    action 'FALSE' (noprec):   reduce type_definition --> 
    action 'TRUE' (noprec):   reduce type_definition --> 
    action 'CHAR' (noprec):   reduce type_definition --> 
    action 'TEXT' (noprec):   reduce type_definition --> 
    action 'INT' (noprec):   reduce type_definition --> 
    action 'ID' (noprec):   reduce type_definition --> 
    action 'error' (noprec):   reduce type_definition --> 
    action '#' (noprec):   reduce type_definition --> 
    action '$$' (noprec):   reduce type_definition --> 
  immediate action: <none>  gotos:    goto type_definition: 171
state 171:  items:    type_declarations -> 'TEXT' type_definition . 
  actions:    action 'EOF' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'DOT' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'COMMA' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'COLON' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'BAR' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LBRACKET' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'RBRACKET' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'QUOTE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LPAREN' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'RPAREN' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'SLASH' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'BSLASH' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'PRIME' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LCURLY' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'RCURLY' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'GLOBALLY' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'SCHEME' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'CLASS' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'TYPE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'VALUE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'AXIOM' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'END' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'ALL' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'EXISTS' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'EXACTLY_ONE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'TS' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'TR' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'WHERE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'VARIABLE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'INIT_CONSTRAINT' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'ARRAY' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'OF' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LTL_ASSERTION' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'DETERMINISTIC' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'NONDETERMINISTIC' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'IS' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'EQ' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LT' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'GT' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'GE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'MI' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'PL' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'GU' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'IM' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LAND' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'LOR' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'NEG' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'FALSE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'TRUE' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'CHAR' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'TEXT' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'INT' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'ID' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action 'error' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action '#' (noprec):   reduce type_declarations --> 'TEXT' type_definition
    action '$$' (noprec):   reduce type_declarations --> 'TEXT' type_definition
  immediate action:   reduce type_declarations --> 'TEXT' type_definition  gotos:state 172:  items:    type_declarations -> type_declarations 'COMMA' . 'TEXT' type_definition
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 173
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 173:  items:    type_declarations -> type_declarations 'COMMA' 'TEXT' . type_definition
  actions:    action 'EOF' (noprec):   reduce type_definition --> 
    action 'DOT' (noprec):   reduce type_definition --> 
    action 'COMMA' (noprec):   reduce type_definition --> 
    action 'COLON' (noprec):   reduce type_definition --> 
    action 'BAR' (noprec):   reduce type_definition --> 
    action 'LBRACKET' (noprec):   reduce type_definition --> 
    action 'RBRACKET' (noprec):   reduce type_definition --> 
    action 'QUOTE' (noprec):   reduce type_definition --> 
    action 'LPAREN' (noprec):   reduce type_definition --> 
    action 'RPAREN' (noprec):   reduce type_definition --> 
    action 'SLASH' (noprec):   reduce type_definition --> 
    action 'BSLASH' (noprec):   reduce type_definition --> 
    action 'PRIME' (noprec):   reduce type_definition --> 
    action 'LCURLY' (noprec):   reduce type_definition --> 
    action 'RCURLY' (noprec):   reduce type_definition --> 
    action 'GLOBALLY' (noprec):   reduce type_definition --> 
    action 'SCHEME' (noprec):   reduce type_definition --> 
    action 'CLASS' (noprec):   reduce type_definition --> 
    action 'TYPE' (noprec):   reduce type_definition --> 
    action 'VALUE' (noprec):   reduce type_definition --> 
    action 'AXIOM' (noprec):   reduce type_definition --> 
    action 'END' (noprec):   reduce type_definition --> 
    action 'ALL' (noprec):   reduce type_definition --> 
    action 'EXISTS' (noprec):   reduce type_definition --> 
    action 'EXACTLY_ONE' (noprec):   reduce type_definition --> 
    action 'TS' (noprec):   reduce type_definition --> 
    action 'TR' (noprec):   reduce type_definition --> 
    action 'WHERE' (noprec):   reduce type_definition --> 
    action 'VARIABLE' (noprec):   reduce type_definition --> 
    action 'INIT_CONSTRAINT' (noprec):   reduce type_definition --> 
    action 'ARRAY' (noprec):   reduce type_definition --> 
    action 'OF' (noprec):   reduce type_definition --> 
    action 'LTL_ASSERTION' (noprec):   reduce type_definition --> 
    action 'DETERMINISTIC' (noprec):   reduce type_definition --> 
    action 'NONDETERMINISTIC' (noprec):   reduce type_definition --> 
    action 'IS' (noprec):   reduce type_definition --> 
    action 'EQ' (explicit right 9997):   shift 175
    action 'LT' (noprec):   reduce type_definition --> 
    action 'LE' (noprec):   reduce type_definition --> 
    action 'GT' (noprec):   reduce type_definition --> 
    action 'GE' (noprec):   reduce type_definition --> 
    action 'MI' (noprec):   reduce type_definition --> 
    action 'PL' (noprec):   reduce type_definition --> 
    action 'GU' (noprec):   reduce type_definition --> 
    action 'IM' (noprec):   reduce type_definition --> 
    action 'LAND' (noprec):   reduce type_definition --> 
    action 'LOR' (noprec):   reduce type_definition --> 
    action 'NEG' (noprec):   reduce type_definition --> 
    action 'FALSE' (noprec):   reduce type_definition --> 
    action 'TRUE' (noprec):   reduce type_definition --> 
    action 'CHAR' (noprec):   reduce type_definition --> 
    action 'TEXT' (noprec):   reduce type_definition --> 
    action 'INT' (noprec):   reduce type_definition --> 
    action 'ID' (noprec):   reduce type_definition --> 
    action 'error' (noprec):   reduce type_definition --> 
    action '#' (noprec):   reduce type_definition --> 
    action '$$' (noprec):   reduce type_definition --> 
  immediate action: <none>  gotos:    goto type_definition: 174
state 174:  items:    type_declarations -> type_declarations 'COMMA' 'TEXT' type_definition . 
  actions:    action 'EOF' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'DOT' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'COMMA' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'COLON' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'BAR' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LBRACKET' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'RBRACKET' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'QUOTE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LPAREN' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'RPAREN' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'SLASH' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'BSLASH' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'PRIME' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LCURLY' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'RCURLY' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'GLOBALLY' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'SCHEME' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'CLASS' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'TYPE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'VALUE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'AXIOM' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'END' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'ALL' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'EXISTS' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'EXACTLY_ONE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'TS' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'TR' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'WHERE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'VARIABLE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'INIT_CONSTRAINT' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'ARRAY' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'OF' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LTL_ASSERTION' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'DETERMINISTIC' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'NONDETERMINISTIC' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'IS' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'EQ' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LT' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'GT' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'GE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'MI' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'PL' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'GU' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'IM' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LAND' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'LOR' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'NEG' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'FALSE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'TRUE' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'CHAR' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'TEXT' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'INT' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'ID' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action 'error' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action '#' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
    action '$$' (noprec):   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition
  immediate action:   reduce type_declarations --> type_declarations 'COMMA' 'TEXT' type_definition  gotos:state 175:  items:    type_definition -> 'EQ' . type_expr
    type_definition -> 'EQ' . 'EQ' type_declaration_union
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 189
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   shift 185
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (explicit right 9997):   shift 177
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 184
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_expr: 176
state 176:  items:    type_definition -> 'EQ' type_expr . 
  actions:    action 'EOF' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'DOT' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'COMMA' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'COLON' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'BAR' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LBRACKET' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'RBRACKET' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'QUOTE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LPAREN' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'RPAREN' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'SLASH' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'BSLASH' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'PRIME' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LCURLY' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'RCURLY' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'GLOBALLY' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'SCHEME' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'CLASS' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'TYPE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'VALUE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'AXIOM' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'END' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'ALL' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'EXISTS' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'EXACTLY_ONE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'TS' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'TR' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'WHERE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'VARIABLE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'ARRAY' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'OF' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LTL_ASSERTION' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'DETERMINISTIC' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'NONDETERMINISTIC' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'IS' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'EQ' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LT' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'GT' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'GE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'MI' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'PL' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'GU' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'IM' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LAND' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'LOR' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'NEG' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'FALSE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'TRUE' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'CHAR' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'TEXT' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'INT' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'ID' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action 'error' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action '#' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
    action '$$' (explicit right 9997):   reduce type_definition --> 'EQ' type_expr
  immediate action:   reduce type_definition --> 'EQ' type_expr  gotos:state 177:  items:    type_definition -> 'EQ' 'EQ' . type_declaration_union
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 179
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_declaration_union: 178
state 178:  items:    type_definition -> 'EQ' 'EQ' type_declaration_union . 
    type_declaration_union -> type_declaration_union . 'BAR' 'TEXT'
  actions:    action 'EOF' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'DOT' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'COMMA' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'COLON' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'BAR' (noprec):   shift 182
    action 'LBRACKET' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'RBRACKET' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'QUOTE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LPAREN' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'RPAREN' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'SLASH' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'BSLASH' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'PRIME' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LCURLY' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'RCURLY' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'GLOBALLY' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'SCHEME' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'CLASS' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'TYPE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'VALUE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'AXIOM' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'END' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'ALL' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'EXISTS' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'EXACTLY_ONE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'TS' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'TR' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'WHERE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'VARIABLE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'INIT_CONSTRAINT' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'ARRAY' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'OF' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LTL_ASSERTION' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'DETERMINISTIC' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'NONDETERMINISTIC' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'IS' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'EQ' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LT' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'GT' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'GE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'MI' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'PL' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'GU' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'IM' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LAND' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'LOR' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'NEG' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'FALSE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'TRUE' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'CHAR' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'TEXT' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'INT' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'ID' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action 'error' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action '#' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
    action '$$' (explicit right 9997):   reduce type_definition --> 'EQ' 'EQ' type_declaration_union
  immediate action: <none>  gotos:state 179:  items:    type_declaration_union -> 'TEXT' . 'BAR' 'TEXT'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   shift 180
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 180:  items:    type_declaration_union -> 'TEXT' 'BAR' . 'TEXT'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 181
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 181:  items:    type_declaration_union -> 'TEXT' 'BAR' 'TEXT' . 
  actions:    action 'EOF' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'DOT' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'COMMA' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'COLON' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'BAR' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LBRACKET' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'RBRACKET' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'QUOTE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LPAREN' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'RPAREN' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'SLASH' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'BSLASH' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'PRIME' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LCURLY' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'RCURLY' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'GLOBALLY' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'SCHEME' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'CLASS' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'TYPE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'VALUE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'AXIOM' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'END' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'ALL' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'EXISTS' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'EXACTLY_ONE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'TS' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'TR' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'WHERE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'VARIABLE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'INIT_CONSTRAINT' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'ARRAY' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'OF' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LTL_ASSERTION' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'DETERMINISTIC' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'NONDETERMINISTIC' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'IS' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'EQ' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LT' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'GT' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'GE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'MI' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'PL' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'GU' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'IM' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LAND' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'LOR' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'NEG' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'FALSE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'TRUE' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'CHAR' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'TEXT' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'INT' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'ID' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action 'error' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action '#' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
    action '$$' (noprec):   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'
  immediate action:   reduce type_declaration_union --> 'TEXT' 'BAR' 'TEXT'  gotos:state 182:  items:    type_declaration_union -> type_declaration_union 'BAR' . 'TEXT'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 183
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 183:  items:    type_declaration_union -> type_declaration_union 'BAR' 'TEXT' . 
  actions:    action 'EOF' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'DOT' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'COMMA' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'COLON' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'BAR' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LBRACKET' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'RBRACKET' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'QUOTE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LPAREN' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'RPAREN' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'SLASH' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'BSLASH' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'PRIME' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LCURLY' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'RCURLY' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'GLOBALLY' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'SCHEME' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'CLASS' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'TYPE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'VALUE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'AXIOM' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'END' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'ALL' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'EXISTS' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'EXACTLY_ONE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'TS' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'TR' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'WHERE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'VARIABLE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'INIT_CONSTRAINT' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'ARRAY' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'OF' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LTL_ASSERTION' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'DETERMINISTIC' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'NONDETERMINISTIC' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'IS' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'EQ' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LT' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'GT' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'GE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'MI' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'PL' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'GU' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'IM' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LAND' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'LOR' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'NEG' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'FALSE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'TRUE' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'CHAR' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'TEXT' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'INT' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'ID' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action 'error' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action '#' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
    action '$$' (noprec):   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'
  immediate action:   reduce type_declaration_union --> type_declaration_union 'BAR' 'TEXT'  gotos:state 184:  items:    type_expr -> 'TEXT' . 
  actions:    action 'EOF' (noprec):   reduce type_expr --> 'TEXT'
    action 'DOT' (noprec):   reduce type_expr --> 'TEXT'
    action 'COMMA' (noprec):   reduce type_expr --> 'TEXT'
    action 'COLON' (noprec):   reduce type_expr --> 'TEXT'
    action 'BAR' (noprec):   reduce type_expr --> 'TEXT'
    action 'LBRACKET' (noprec):   reduce type_expr --> 'TEXT'
    action 'RBRACKET' (noprec):   reduce type_expr --> 'TEXT'
    action 'QUOTE' (noprec):   reduce type_expr --> 'TEXT'
    action 'LPAREN' (noprec):   reduce type_expr --> 'TEXT'
    action 'RPAREN' (noprec):   reduce type_expr --> 'TEXT'
    action 'SLASH' (noprec):   reduce type_expr --> 'TEXT'
    action 'BSLASH' (noprec):   reduce type_expr --> 'TEXT'
    action 'PRIME' (noprec):   reduce type_expr --> 'TEXT'
    action 'LCURLY' (noprec):   reduce type_expr --> 'TEXT'
    action 'RCURLY' (noprec):   reduce type_expr --> 'TEXT'
    action 'GLOBALLY' (noprec):   reduce type_expr --> 'TEXT'
    action 'SCHEME' (noprec):   reduce type_expr --> 'TEXT'
    action 'CLASS' (noprec):   reduce type_expr --> 'TEXT'
    action 'TYPE' (noprec):   reduce type_expr --> 'TEXT'
    action 'VALUE' (noprec):   reduce type_expr --> 'TEXT'
    action 'AXIOM' (noprec):   reduce type_expr --> 'TEXT'
    action 'END' (noprec):   reduce type_expr --> 'TEXT'
    action 'ALL' (noprec):   reduce type_expr --> 'TEXT'
    action 'EXISTS' (noprec):   reduce type_expr --> 'TEXT'
    action 'EXACTLY_ONE' (noprec):   reduce type_expr --> 'TEXT'
    action 'TS' (noprec):   reduce type_expr --> 'TEXT'
    action 'TR' (noprec):   reduce type_expr --> 'TEXT'
    action 'WHERE' (noprec):   reduce type_expr --> 'TEXT'
    action 'VARIABLE' (noprec):   reduce type_expr --> 'TEXT'
    action 'INIT_CONSTRAINT' (noprec):   reduce type_expr --> 'TEXT'
    action 'ARRAY' (noprec):   reduce type_expr --> 'TEXT'
    action 'OF' (noprec):   reduce type_expr --> 'TEXT'
    action 'LTL_ASSERTION' (noprec):   reduce type_expr --> 'TEXT'
    action 'DETERMINISTIC' (noprec):   reduce type_expr --> 'TEXT'
    action 'NONDETERMINISTIC' (noprec):   reduce type_expr --> 'TEXT'
    action 'IS' (noprec):   reduce type_expr --> 'TEXT'
    action 'EQ' (noprec):   reduce type_expr --> 'TEXT'
    action 'LT' (noprec):   reduce type_expr --> 'TEXT'
    action 'LE' (noprec):   reduce type_expr --> 'TEXT'
    action 'GT' (noprec):   reduce type_expr --> 'TEXT'
    action 'GE' (noprec):   reduce type_expr --> 'TEXT'
    action 'MI' (noprec):   reduce type_expr --> 'TEXT'
    action 'PL' (noprec):   reduce type_expr --> 'TEXT'
    action 'GU' (noprec):   reduce type_expr --> 'TEXT'
    action 'IM' (noprec):   reduce type_expr --> 'TEXT'
    action 'LAND' (noprec):   reduce type_expr --> 'TEXT'
    action 'LOR' (noprec):   reduce type_expr --> 'TEXT'
    action 'NEG' (noprec):   reduce type_expr --> 'TEXT'
    action 'FALSE' (noprec):   reduce type_expr --> 'TEXT'
    action 'TRUE' (noprec):   reduce type_expr --> 'TEXT'
    action 'CHAR' (noprec):   reduce type_expr --> 'TEXT'
    action 'TEXT' (noprec):   reduce type_expr --> 'TEXT'
    action 'INT' (noprec):   reduce type_expr --> 'TEXT'
    action 'ID' (noprec):   reduce type_expr --> 'TEXT'
    action 'error' (noprec):   reduce type_expr --> 'TEXT'
    action '#' (noprec):   reduce type_expr --> 'TEXT'
    action '$$' (noprec):   reduce type_expr --> 'TEXT'
  immediate action:   reduce type_expr --> 'TEXT'  gotos:state 185:  items:    type_expr -> 'ARRAY' . type_expr 'OF' type_expr
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 189
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   shift 185
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 184
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_expr: 186
state 186:  items:    type_expr -> 'ARRAY' type_expr . 'OF' type_expr
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   shift 187
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 187:  items:    type_expr -> 'ARRAY' type_expr 'OF' . type_expr
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 189
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   shift 185
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 184
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto type_expr: 188
state 188:  items:    type_expr -> 'ARRAY' type_expr 'OF' type_expr . 
  actions:    action 'EOF' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'DOT' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'COMMA' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'COLON' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'BAR' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LBRACKET' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'RBRACKET' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'QUOTE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LPAREN' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'RPAREN' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'SLASH' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'BSLASH' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'PRIME' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LCURLY' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'RCURLY' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'GLOBALLY' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'SCHEME' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'CLASS' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'TYPE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'VALUE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'AXIOM' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'END' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'ALL' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'EXISTS' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'EXACTLY_ONE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'TS' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'TR' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'WHERE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'VARIABLE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'INIT_CONSTRAINT' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'ARRAY' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'OF' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LTL_ASSERTION' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'DETERMINISTIC' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'NONDETERMINISTIC' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'IS' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'EQ' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LT' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'GT' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'GE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'MI' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'PL' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'GU' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'IM' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LAND' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'LOR' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'NEG' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'FALSE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'TRUE' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'CHAR' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'TEXT' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'INT' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'ID' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action 'error' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action '#' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
    action '$$' (noprec):   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr
  immediate action:   reduce type_expr --> 'ARRAY' type_expr 'OF' type_expr  gotos:state 189:  items:    type_expr -> 'LCURLY' . 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   shift 190
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 190:  items:    type_expr -> 'LCURLY' 'BAR' . typing 'IS' value_expression 'BAR' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 83
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto identifier: 163
    goto typing: 191
state 191:  items:    type_expr -> 'LCURLY' 'BAR' typing . 'IS' value_expression 'BAR' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (explicit right 9994):   shift 192
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 192:  items:    type_expr -> 'LCURLY' 'BAR' typing 'IS' . value_expression 'BAR' 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   shift 100
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   shift 96
    action 'LPAREN' (noprec):   shift 107
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   shift 112
    action 'RCURLY' (noprec):   error
    action 'GLOBALLY' (noprec):   shift 120
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   shift 151
    action 'EXISTS' (noprec):   shift 152
    action 'EXACTLY_ONE' (noprec):   shift 153
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (explicit left 9993):   shift 154
    action 'NONDETERMINISTIC' (explicit left 9993):   shift 155
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   shift 116
    action 'FALSE' (noprec):   shift 94
    action 'TRUE' (noprec):   shift 93
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   shift 121
    action 'INT' (noprec):   shift 95
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:    goto value_expression: 137
    goto temporal_modal_operators: 118
    goto accessor: 99
    goto infix_expr: 111
    goto axiom_infix_expr: 110
    goto quantifier: 103
state 193:  items:    type_expr -> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' . 'RCURLY'
  actions:    action 'EOF' (noprec):   error
    action 'DOT' (noprec):   error
    action 'COMMA' (noprec):   error
    action 'COLON' (noprec):   error
    action 'BAR' (noprec):   error
    action 'LBRACKET' (noprec):   error
    action 'RBRACKET' (noprec):   error
    action 'QUOTE' (noprec):   error
    action 'LPAREN' (noprec):   error
    action 'RPAREN' (noprec):   error
    action 'SLASH' (noprec):   error
    action 'BSLASH' (noprec):   error
    action 'PRIME' (noprec):   error
    action 'LCURLY' (noprec):   error
    action 'RCURLY' (noprec):   shift 194
    action 'GLOBALLY' (noprec):   error
    action 'SCHEME' (noprec):   error
    action 'CLASS' (noprec):   error
    action 'TYPE' (noprec):   error
    action 'VALUE' (noprec):   error
    action 'AXIOM' (noprec):   error
    action 'END' (noprec):   error
    action 'ALL' (noprec):   error
    action 'EXISTS' (noprec):   error
    action 'EXACTLY_ONE' (noprec):   error
    action 'TS' (noprec):   error
    action 'TR' (noprec):   error
    action 'WHERE' (noprec):   error
    action 'VARIABLE' (noprec):   error
    action 'INIT_CONSTRAINT' (noprec):   error
    action 'ARRAY' (noprec):   error
    action 'OF' (noprec):   error
    action 'LTL_ASSERTION' (noprec):   error
    action 'DETERMINISTIC' (noprec):   error
    action 'NONDETERMINISTIC' (noprec):   error
    action 'IS' (noprec):   error
    action 'EQ' (noprec):   error
    action 'LT' (noprec):   error
    action 'LE' (noprec):   error
    action 'GT' (noprec):   error
    action 'GE' (noprec):   error
    action 'MI' (noprec):   error
    action 'PL' (noprec):   error
    action 'GU' (noprec):   error
    action 'IM' (noprec):   error
    action 'LAND' (noprec):   error
    action 'LOR' (noprec):   error
    action 'NEG' (noprec):   error
    action 'FALSE' (noprec):   error
    action 'TRUE' (noprec):   error
    action 'CHAR' (noprec):   error
    action 'TEXT' (noprec):   error
    action 'INT' (noprec):   error
    action 'ID' (noprec):   error
    action 'error' (noprec):   error
    action '#' (noprec):   error
    action '$$' (noprec):   error
  immediate action: <none>  gotos:state 194:  items:    type_expr -> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY' . 
  actions:    action 'EOF' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'DOT' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'COMMA' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'COLON' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'BAR' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LBRACKET' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'RBRACKET' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'QUOTE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LPAREN' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'RPAREN' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'SLASH' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'BSLASH' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'PRIME' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LCURLY' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'RCURLY' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'GLOBALLY' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'SCHEME' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'CLASS' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'TYPE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'VALUE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'AXIOM' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'END' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'ALL' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'EXISTS' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'EXACTLY_ONE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'TS' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'TR' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'WHERE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'VARIABLE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'INIT_CONSTRAINT' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'ARRAY' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'OF' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LTL_ASSERTION' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'DETERMINISTIC' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'NONDETERMINISTIC' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'IS' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'EQ' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LT' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'GT' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'GE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'MI' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'PL' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'GU' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'IM' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LAND' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'LOR' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'NEG' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'FALSE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'TRUE' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'CHAR' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'TEXT' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'INT' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'ID' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action 'error' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action '#' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
    action '$$' (noprec):   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'
  immediate action:   reduce type_expr --> 'LCURLY' 'BAR' typing 'IS' value_expression 'BAR' 'RCURLY'  gotos:
startStates = 0
------------------------
        Output file describing compiled parser placed in Parser.fs and Parser.fsi
